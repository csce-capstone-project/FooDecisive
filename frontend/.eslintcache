[{"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/index.js":"1","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/reportWebVitals.js":"2","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/App.js":"3","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/BigSearchBar/Search.js":"4","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Favorites/Favorites.js":"5","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Login/Login.js":"6","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Register/Register.js":"7","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/NavBar/NavBar.js":"8","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Profile/Profile.js":"9","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Home/Home.js":"10","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Favorites/FavoritesList.js":"11","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/services/authentication.js":"12","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/BigSearchBar/BigSearchBar.js":"13","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/RestaurantDetail/List.js":"14","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/services/yelp.js":"15","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/services/witai.js":"16","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/RestaurantDetail/map.js":"17","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/RestaurantDetail/Detail.js":"18","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Favorites/FavoritesDetail.js":"19","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/ChatBot/ChatBot.js":"20","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/Context.js":"21","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/Hooks/useLocation.js":"22","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Recommendations/Recs.js":"23","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/RestaurantContainer/RestaurantContainer.js":"24","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Chat/Chat.js":"25","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Recommendations/RecsList.js":"26","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/Hooks/useLoading.js":"27","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/Constants.js":"28","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Restaurant/index.js":"29","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Bubble/index.js":"30","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/ResizableTextarea/index.js":"31","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Recommendations/RecsDetail.js":"32","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/ResizableTextarea/ResizableTextarea.js":"33","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Bubble/Bubble.js":"34","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Restaurant/Restaurant.js":"35","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Profile/ReviewDetail.js":"36"},{"size":720,"mtime":1612380235233,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":1612380235233,"results":"39","hashOfConfig":"38"},{"size":2573,"mtime":1617747584206,"results":"40","hashOfConfig":"38"},{"size":1303,"mtime":1617759922954,"results":"41","hashOfConfig":"38"},{"size":1883,"mtime":1617760023422,"results":"42","hashOfConfig":"38"},{"size":2265,"mtime":1617760092473,"results":"43","hashOfConfig":"38"},{"size":1912,"mtime":1617747584249,"results":"44","hashOfConfig":"38"},{"size":5645,"mtime":1617763533291,"results":"45","hashOfConfig":"38"},{"size":5981,"mtime":1617759633144,"results":"46","hashOfConfig":"38"},{"size":10391,"mtime":1617764294891,"results":"47","hashOfConfig":"38"},{"size":466,"mtime":1615505751803,"results":"48","hashOfConfig":"38"},{"size":341,"mtime":1614573708212,"results":"49","hashOfConfig":"38"},{"size":4854,"mtime":1617759916258,"results":"50","hashOfConfig":"38"},{"size":398,"mtime":1616875263492,"results":"51","hashOfConfig":"38"},{"size":4061,"mtime":1617757906928,"results":"52","hashOfConfig":"38"},{"size":3707,"mtime":1617747584265,"results":"53","hashOfConfig":"38"},{"size":1214,"mtime":1614692884692,"results":"54","hashOfConfig":"38"},{"size":12926,"mtime":1617760269141,"results":"55","hashOfConfig":"38"},{"size":19750,"mtime":1617760030559,"results":"56","hashOfConfig":"38"},{"size":2009,"mtime":1617747584222,"results":"57","hashOfConfig":"38"},{"size":102,"mtime":1617747584207,"results":"58","hashOfConfig":"38"},{"size":423,"mtime":1617747584214,"results":"59","hashOfConfig":"38"},{"size":1912,"mtime":1617759765140,"results":"60","hashOfConfig":"38"},{"size":3240,"mtime":1617747584254,"results":"61","hashOfConfig":"38"},{"size":6915,"mtime":1617763343641,"results":"62","hashOfConfig":"38"},{"size":441,"mtime":1617747584248,"results":"63","hashOfConfig":"38"},{"size":294,"mtime":1617747584213,"results":"64","hashOfConfig":"38"},{"size":4084,"mtime":1617747584207,"results":"65","hashOfConfig":"38"},{"size":106,"mtime":1617747584252,"results":"66","hashOfConfig":"38"},{"size":54,"mtime":1617747584219,"results":"67","hashOfConfig":"38"},{"size":87,"mtime":1617747584251,"results":"68","hashOfConfig":"38"},{"size":19564,"mtime":1617760183019,"results":"69","hashOfConfig":"38"},{"size":2093,"mtime":1617747584250,"results":"70","hashOfConfig":"38"},{"size":1534,"mtime":1617747584218,"results":"71","hashOfConfig":"38"},{"size":4442,"mtime":1617747584252,"results":"72","hashOfConfig":"38"},{"size":9499,"mtime":1617760427488,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1xso5n3",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"76"},"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/index.js",[],["160","161"],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/reportWebVitals.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/App.js",["162","163","164"],"import React, { useState }from 'react'\nimport {BrowserRouter as Router, Route, Switch, NavLink, Link} from 'react-router-dom'\nimport { Home } from './components/Home/Home'\nimport { HomeNavBar } from './components/NavBar/NavBar'\nimport { Login } from './components/Login/Login'\nimport { Search } from './components/BigSearchBar/Search'\nimport { Register } from './components/Register/Register'\nimport { Chat } from './components/Chat/Chat'\nimport { RestaurantContainer } from './components/RestaurantContainer/RestaurantContainer'\nimport { Favorites } from './components/Favorites/Favorites'\nimport { Recs } from './components/Recommendations/Recs'\nimport { useLocation } from \"./Hooks/useLocation\";\nimport Context from \"./Context\";\nimport { Profile } from './components/Profile/Profile'\n// import {Transition, CSSTransition, TransitionGroup} from 'react-transition-group'\n// import { play, exit } from './timelines'\n// import { Container, Navbar, Nav } from 'react-bootstrap'\nexport const UsernameContext = React.createContext('');\n\n\nexport default function App() {\n  const [restaurants, setRestaurants] = useState([]);\n  const userLocation = useLocation();\n\n  return (\n    <Router>\n      <div className=\"full-container\">\n        <HomeNavBar />\n            <Route render={({location}) => (\n                <Switch location={location}>\n                <Route exact path=\"/\">\n                    <Home />\n                  </Route>\n                  <Route path=\"/favs\">\n                    <Favorites />\n                  </Route>\n                  <Route path=\"/search\">\n                    <Search />\n                  </Route>\n                  <Route path=\"/recs\">\n                    <Recs />\n                  </Route>\n                  <Route path=\"/profile\">\n                    <Profile />\n                  </Route>\n                  <Route path=\"/login\">\n                    <Login />\n                  </Route>\n                  <Route path=\"/register\">\n                    <Register/>\n                  </Route>\n                  <Route path =\"/ChatBot\">\n                    <Context.Provider value={{ userLocation, restaurants, setRestaurants }}>\n                      <div className=\"app\">\n                      <Chat />\n                      </div>\n                    </Context.Provider>\n                  </Route>\n                  <Route path=\"/businessid\">\n                  </Route>\n                </Switch>\n            )} \n            />\n      </div>\n    </Router>\n  );\n}\n\n\n// Turn App into class (state-based implementation?)\n\n// export default App;\n","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/BigSearchBar/Search.js",["165","166"],"import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { BigSearchBar } from '../BigSearchBar/BigSearchBar'\nimport { yelpREST } from '../../services/yelp';\nimport { List } from '../RestaurantDetail/List'\n\n\nconst useStyles = makeStyles((theme) => ({\n    about: {\n        padding: theme.spacing(3),\n        margin: '50px auto 10px',\n        maxWidth: '40%',\n        background: 'cyan'\n    },\n    content: {\n        padding: theme.spacing(4),\n        margin: '30px auto 10px',\n        maxWidth: '40%',\n        background: 'darkorchid'\n    }\n}));\n\n\n\nexport function Search() {\n    \n    const [results, setResults] = useState([]);\n\n    function searchYelp(term, location, sortBy) {\n        yelpREST.search(term, location, sortBy).then(businesses => {\n            console.log(businesses)\n            setResults(businesses)\n          })\n        // yelpREST('business/search', { params : {\n        //         term : term\n        //     }\n        // }).then(({ data }) => {\n        //     console.log(data)\n        //   })\n    }\n\n    \n\n    const classes = useStyles();\n    return(\n        <div className=\"App\" src=\"../../restaurant.jpg\">\n            <BigSearchBar searchYelp={searchYelp}/>\n            <List businesses={results}/>\n        </div>\n    );\n}","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Favorites/Favorites.js",["167","168"],"import React, {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {authFetch} from \"../../services/authentication\";\nimport { yelpBusID } from '../../services/yelp';\nimport {FavoritesList} from './FavoritesList';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Container from \"@material-ui/core/Container\";\nimport Fade from 'react-reveal/Fade';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  text: {\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\n\nexport function Favorites() {\n  const [results, setResults] = useState([]);\n\n\n  useEffect(() => {\n    const abortController = new AbortController()\n    const signal = abortController.signal\n\n    authFetch(\"/api/get_favorites\", { signal: signal }).then(res => {\n        return res.json()\n    }).then(res => {\n        console.log(res['businesses'])\n        let businesses = res['businesses']\n        \n        if (businesses !== undefined) {\n          let bus = []   \n          for(let i = 0; i < businesses.length; i++) {\n            bus.push(yelpBusID.searchByID(businesses[i][0]))\n          }  \n\n          Promise.all(bus).then((res) => {\n            return res\n          }).then((business) => {\n            setResults(business)\n          })\n        }\n\n    })\n\n\n    return function cleanup() {\n      abortController.abort()\n    }\n\n  }, [])\n\n  return(\n    <div>\n      {results.length != 0  ? <Fade><Container><Typography variant=\"h2\" align=\"center\">\n          Your Favorites!\n      </Typography><FavoritesList businesses={results} /></Container></Fade>\n      : <Container style={{margin: '0', position: 'absolute', top: '50%', left: '50%'}}>\n        <CircularProgress style={{color: 'orange'}}/>\n        </Container>}\n    </div>\n  );\n    \n}\n      ","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Login/Login.js",["169"],"import React, { useState, useEffect } from 'react'\nimport {Redirect} from 'react-router'\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport './Login.css'\nimport {login, useAuth} from \"../../services/authentication\"\nimport Container from \"@material-ui/core/Container\";\nimport Fade from 'react-reveal/Fade';\n\n\n\nexport function Login() {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  // const history = useHistory();\n  const [logged] = useAuth();\n\n  function validate(){\n    return username.length > 0 && password.length >= 0;\n  }\n\n  const onSubmitClick = (e)=>{\n    e.preventDefault()\n    console.log(\"You pressed login\")\n    let opts = {\n      'username': username,\n      'password': password\n    }\n    console.log(opts)\n    fetch('/api/login', {\n      method: 'post',\n      body: JSON.stringify(opts)\n    }).then(r => r.json())\n      .then(token => {\n        if (token.access_token){\n          login(token)\n          console.log(token)\n          localStorage.setItem('user', username)          \n        }\n        else {\n          console.log(\"Please type in correct username/password\")\n        }\n      })\n\n      \n  }\n\n  const handleUsernameChange = (e) => {\n    setUsername(e.target.value)\n  }\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value)\n  }\n\n  return (\n    \n    <Container style={{margin: '0', position: 'absolute', top: '30%', left: '40%', maxWidth: '500px'}}>\n      <Fade>\n      {!logged ? <div>\n      <h2>Login</h2>\n      <Form onSubmit={onSubmitClick}>\n          <Form.Group controlId=\"user\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control autoFocus type=\"text\" placeholder=\"Username\" value={username} onChange={handleUsernameChange} />\n          </Form.Group>\n          <Form.Group controlId=\"pass\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={handlePasswordChange} />\n          </Form.Group>\n          <Button type=\"submit\" style={{backgroundColor: 'orange'}} disabled={!validate()}>\n            Submit\n          </Button>\n      </Form>\n      </div>:\n      <Redirect to='/'/>}\n      </Fade>\n    </Container>\n    \n  )\n}","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Register/Register.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/NavBar/NavBar.js",["170"],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Profile/Profile.js",["171","172","173","174","175","176","177","178"],"import React, {useState, useEffect} from 'react';\nimport {authFetch} from \"../../services/authentication\";\nimport './Profile.css';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Typography, Box, Button } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport { yelpBusID } from '../../services/yelp';\nimport {ReviewDetail} from './ReviewDetail';\nimport Fade from 'react-reveal/Fade';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n\nexport function Profile() {\n    const [username, setUser] = useState(\"\");\n    const [reviews, setReviews] = useState([])\n    const [openConfirm, setOpenConfirm] = useState(false);\n\n    const fullWidth = true;\n\n    const handleClose = () => {\n        setOpenConfirm(false)\n    }\n\n    const handleOpenConfirm = () => {\n        setOpenConfirm(true)\n    }\n\n    function handleDeleteRev() {\n\n    }\n\n    useEffect(() => {\n        fetch(\"/test\").then(res => {\n            return res.json()\n        }).then(res => {\n            console.log(res)\n        })\n        authFetch(\"/api/protected\").then(response => {\n          if (response.status === 401){\n            setUser(\"Sorry you aren't authorized!\")\n            return null\n          }\n          return response.json()\n        }).then(response => {\n          if (response && response.message){\n            setUser(response.message)\n          }\n        })\n\n        const abortController = new AbortController()\n        const signal = abortController.signal\n\n        authFetch(\"api/get_reviews\", { signal: signal }).then(response => {\n            return response.json()\n        }).then(res => {\n            console.log(res)\n            let review_bus = []\n            for(let i = 0; i < res.length; i++) {\n                review_bus.push(res[i]['business_id'])\n            }\n            console.log(review_bus)\n            if (review_bus !== undefined) {\n                let bus = []   \n                for(let j = 0; j < review_bus.length; j++) {\n                  bus.push(yelpBusID.searchByID(review_bus[j]))\n                }  \n                Promise.all(bus).then((res) => {\n                  console.log(res)\n                  return res\n                }).then((business) => {\n                    console.log(business)\n                  let review_businesses = business\n                  console.log(review_businesses)\n                  for(let k = 0; k < res.length; k++) {\n                        res[k]['business_name'] = review_businesses[k]['name']\n                        res[k]['address'] = review_businesses[k]['address']\n                        res[k]['imageSrc'] = review_businesses[k]['imageSrc']\n                        res[k]['city'] = review_businesses[k]['city']\n                        res[k]['state'] = review_businesses[k]['state']\n                        res[k]['zipCode'] = review_businesses[k]['zipCode']\n                    }\n                    setReviews(res)\n                })\n            }\n        })\n        // .then((review_b, resp) => {\n        //     for(let k = 0; k < resp.length; k++) {\n        //         resp[k]['business_name'] = review_b[k]['name']\n        //     }\n        //     setReviews(resp)\n        //     // console.log(reviews)\n        // })\n\n        return function cleanup() {\n            abortController.abort()\n          }\n      }, [])\n\n    return (\n        <Fade>\n        <div className=\"Profile\" style={{backgroundColor: 'Orange', height: '100%'}}>\n            <Grid container spacing={0} style={{ color: 'white', backgroundColor: 'Orange' }}>\n                {/* <Grid item xs={12} style={{margin: 'auto'}}>\n                    <Typography variant='h3'>Profile</Typography>\n                </Grid> */}\n            </Grid>\n            <Grid container spacing={0}>\n                <Grid item xs={3} style={{'padding-top':'50px'}}>\n                <Typography variant='h2' style={{ 'padding-top': '10px'}}><b>Profile</b></Typography> <br></br>\n                    <Avatar style={{ height: '125px', width: '125px', fontSize: '50px', margin:'auto' }}>\n                        {String(localStorage.getItem('user'))[0].toUpperCase()}\n                    </Avatar>\n                    <Typography variant='h6' style={{ 'padding-top': '10px'}}>{username}</Typography>\n                </Grid>\n                <Grid item xs={8} style={{'padding-top':'30px'}}>\n                    <Paper style={{'border-style': 'double'}}>\n                        <Typography variant='h3' style={{ 'padding-top': '10px', 'border-bottom-style':'solid'}}>Review History</Typography>\n                        {reviews.length != 0 ? \n                        <Grid container direction={'column'} spacing={0}>\n                            {\n                                reviews.map(review => {\n                                    return <div>\n                                        <ReviewDetail review={review} key={review.business_id}/>\n                                    </div>;\n                                })\n                            }\n                        </Grid>:  \n                        <CircularProgress style={{color: 'orange'}}/>\n                    }\n                    </Paper>\n                </Grid>\n            </Grid>\n            {/*<Dialog\n                open={openConfirm}\n                onClose={handleClose}\n                aria-labelledby=\"business name\"\n                fullWidth={fullWidth}\n                className='custom-modal-style'\n            >\n                <DialogTitle id='simple-dialog-title'>\n                    <Typography>Confirm review deletion</Typography>\n                </DialogTitle>\n                <DialogContent>\n                    <Button size='small' variant='contained' color='secondary'>YES</Button>\n                    <Button size='small' variant='outlined' color='secondary' onClick={handleClose}>NO</Button>\n                </DialogContent>\n            </Dialog>*/}\n        </div>\n        </Fade>\n    );\n}","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Home/Home.js",["179","180"],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Favorites/FavoritesList.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/services/authentication.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/BigSearchBar/BigSearchBar.js",["181","182","183","184","185","186","187"],"import React, { useState } from 'react'\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Fade from 'react-reveal/Fade';\n\nimport './BigSearchBar.css';\nimport Map from '../RestaurantDetail/map'\n\nrequire('dotenv').config()\nconst { REACT_APP_GOOGLE_MAPS_API_KEY } = process.env;\nconst API_KEY = REACT_APP_GOOGLE_MAPS_API_KEY\n\n\nconst WhiteTextTypography = withStyles({\n  root: {\n    color: \"#FFFFFF\"\n  }\n})(Typography);\n\n\nconst google = window.google;\n\nexport function BigSearchBar(props) {\n\n\n\n  \n  const [term, setTerm] = useState('')\n  const [location, setLocation] = useState('')\n  const [sortBy, setSortBy] = useState('best_match')\n  //getCurrentLocation()\n  \n\n    // useEffect(() => {\n    //   const myElement = document.querySelector('#myElement')\n    //   init(myElement, { showCursor: false, strings: ['Welcome to Search!!', 'Yeah!' ] })\n    // }, [])\n\n    let sortByOptions = {\n        'Best Match': 'best_match',\n        'Highly Rated': 'rating',\n        'Most Reviewed': 'review_count'\n    }\n\n\n  //Get user location\n  const [lat, setLat] = useState('latitude')\n  const [lng, setLng] = useState('longitude')\n  //Get user location\n  function getCurrentLocation() {\n    navigator.geolocation.getCurrentPosition(\n      function (position) {\n        console.log(position);\n        fetch('https://maps.googleapis.com/maps/api/geocode/json?address=' + position.coords.latitude + ',' + position.coords.longitude + '&key=' + API_KEY)\n        .then((response) => response.json())\n        .then((responseJson) => {\n            console.log('ADDRESS GEOCODE' + JSON.stringify(responseJson.results[0].formatted_address))\n\n            setLocation(JSON.stringify(responseJson.results[0].formatted_address));\n          })\n          \n      },\n\n      function (error) {\n        console.error(\"Error Code = \" + error.code + \" - \" + error.message);\n      }\n    );\n  };\n  \n\n  // let sortByOptions = {\n  //   'Best Match': 'best_match',\n  //   'Highly Rated': 'rating',\n  //   'Most Reviewed': 'review_count'\n  // }\n\n  function getSortByClass(sortByOption) {\n    if (sortBy === sortByOption) {\n      return 'active';\n    } else {\n      return '';\n    }\n  }\n\n  function handleSortByChange(sortByOption) {\n    setSortBy(sortByOption)\n  }\n\n  function handleTermChange(e) {\n    setTerm(e.target.value)\n  }\n\n  function handleLocationChange(e) {\n    setLocation(e.target.value)\n  }\n\n  function handleSearch(e) {\n    props.searchYelp(term, location, sortBy);\n    e.preventDefault();\n  }\n\n    function validate() {\n      return term.length > 0 && location.length > 0;\n    }\n\n\n\n  const renderSortByOptions = () => {\n    return Object.keys(sortByOptions).map(sortByOption => {\n      let sortByOptionValue = sortByOptions[sortByOption];\n      return (<li key={sortByOptionValue} className={getSortByClass(sortByOptionValue)}\n        onClick={() => handleSortByChange(sortByOptionValue)}>{sortByOption}</li>);\n    });\n  }\n\n\n\n  return (\n    <Fade>\n    <div className=\"SearchBar\">\n      <div className=\"SearchBar-sort-options\">\n        <WhiteTextTypography variant=\"h2\" align=\"center\" id=\"myElement\" gutterBottom>\n          Welcome to Search!\n      </WhiteTextTypography>\n        <ul>\n          {renderSortByOptions()}\n        </ul>\n        <div className=\"SearchBar-fields\">\n        <input placeholder=\"Find\" onChange={handleTermChange} />\n        <input placeholder=\"Near\" value={location} onChange={handleLocationChange} />\n      </div>\n      <div className=\"SearchBar-submit\">\n        {/* <button style={{}} onClick={handleSearch} disabled={!validate()}>Search</button>\n        <button onClick={getCurrentLocation}> Current location</button> */}\n        <Button onClick={getCurrentLocation}>Set As Current location</Button> <br></br> <br></br>\n        <Button color=\"primary\" onClick={handleSearch} disabled={!validate()}>Search</Button>\n      </div>\n      </div>\n    </div>\n    </Fade>\n  );\n}\n\n// export function BigSearchBar() {\n//   const classes = useStyles();\n//   const [entry, setEntry] = useState(\"\");\n\n//   function validate(){\n//     return entry.length > 0;\n//   }\n\n//   function handleSubmit(){\n//     console.log(entry);\n//   }\n\n//   function onKeyUp(event) {\n//     if (event.charCode === 13) {\n//       this.setState({ inputValue: event.target.value });\n//     }\n//   }\n\n//   return (\n//     <Paper component=\"form\" className={classes.root} onSubmit={handleSubmit}>\n//       <InputBase\n//         className={classes.input}\n//         placeholder=\"Search restaurant\"\n//         inputProps={{ 'aria-label': 'big-search' }}\n//         onKeyPress={onKeyUp}\n//       />\n//       <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\" href='/search'>\n//         <SearchIcon />\n//       </IconButton>\n//     </Paper>\n//   );\n// }\n\n","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/RestaurantDetail/List.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/services/yelp.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/services/witai.js",["188","189","190","191","192","193"],"import { yelpREST } from './yelp';\n\nrequire('dotenv').config()\nconst { REACT_APP_WIT_AI_API_KEY } = process.env;\nconst responses = require('../responses.json');\n\nconst API_KEY = REACT_APP_WIT_AI_API_KEY\n\nexport const witaiREST = {\n    chat(query, userLocation){\n      return fetch(`https://api.wit.ai/message?v=20210218&q=${query}`,{\n        headers: {\n          Authorization: `Bearer ${API_KEY}`\n        }\n      }).then(response=>response.json())\n      .then(response => {\n        if(response.intents.length > 0){\n          console.log(response)\n          let intent = response.intents[0]['name']\n          let message = responses[intent]\n          if(intent == 'search'){\n            if(response.entities['wit$location:location']){\n              let location = response.entities['wit$location:location'][0]['value']\n              return yelpREST.search(response.entities['wit$search_query:search_query'][0]['value'],location,'best_match').then(response =>{\n                message = message.replace('#',location)\n                return{\n                  message:[{\n                    type:\"text\",\n                    content:message\n                  }],\n                  results:response\n                }\n              })\n            }\n          }\n        }\n      })\n    }\n};\n","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/RestaurantDetail/map.js",["194","195"],"import React, { Component } from 'react';\nimport { render } from 'react-dom';\n\nrequire('dotenv').config()\nconst { REACT_APP_GOOGLE_MAPS_API_KEY } = process.env;\nconst API_KEY = REACT_APP_GOOGLE_MAPS_API_KEY\nconst google = window.google\n\nclass Map extends Component {\n    constructor(props) {\n        super(props);\n        this.onScriptLoad = this.onScriptLoad.bind(this)\n    }\n\n    onScriptLoad() {\n        const map = new window.google.maps.Map(\n            document.getElementById(this.props.id),\n            this.props.options);\n        this.props.onMapLoad(map)\n    }\n\n    componentDidMount() {\n        if (!window.google) {\n            var s = document.createElement('script');\n            s.type = 'text/javascript';\n            s.src = `https://maps.google.com/maps/api/js?key=${API_KEY}`;\n            var x = document.getElementsByTagName('script')[0];\n            x.parentNode.insertBefore(s, x);\n            s.addEventListener('load', e => {\n                this.onScriptLoad()\n            })\n        } else {\n            this.onScriptLoad()\n        }\n    }\n\n    render() {\n        return (\n            <div style={{ width: 550, height: 200 }} id={this.props.id} />\n        );\n    }\n}\n\nexport default Map","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/RestaurantDetail/Detail.js",["196","197","198","199","200","201","202","203","204","205","206"],"import React, {useState, useEffect} from 'react';\nimport './Detail.css';\nimport Card from '@material-ui/core/Card';\nimport { CardActionArea, DialogContent, Button } from '@material-ui/core';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Box from '@material-ui/core/Box';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport StarIcon from '@material-ui/icons/Star';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {authFetch, useAuth} from \"../../services/authentication\";\nimport Form from \"react-bootstrap/Form\";\nimport Map from './map'\nimport Rating from '@material-ui/lab/Rating';\nimport Slide from 'react-reveal/Slide';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  text: {\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport function Detail(props) {\n    const [businessID, setBusinessID] = useState('')\n    const [review, setReview] = useState('')\n    const [rate, setRate] = useState('')\n\n    const [open, setOpen] = React.useState(false);\n    const [openRate, setOpenRate] = React.useState(false);\n    const fullWidth = true;\n\n    const [logged] = useAuth();\n    const [username, setUser] = useState(\"\");\n    const [favorite, setFavorite] = useState(false);\n    const [initfavorite, setInitFavorite] = useState(false);\n\n    const [selected, setSelected] = useState(false);\n\n    const classes = useStyles();\n\n    const handleOpen = (e) => {\n      setOpen(true);\n      console.log(props.business.id)\n      setBusinessID(props.business.id)\n    };\n\n    const handleClose = () => {\n      setOpen(false);\n      setOpenRate(false);\n    };\n\n    const handleRate = () => {\n      setOpen(false);\n      setOpenRate(true);\n    }\n\n    const handleReviewChange = (e) => {\n      setReview(e.target.value);\n    }\n\n    const handleRateChange = (e) => {\n      setRate(e.target.value);\n    }\n\n    function validate(){\n      return Number(rate) > 0 && review.length > 0 && review.length < 101;\n    }\n\n    useEffect(() => {\n      fetch(\"/test\").then(res => {\n          return res.json()\n      }).then(res => {\n          console.log(res)\n      })\n      authFetch(\"/api/protected\").then(response => {\n        if (response.status === 401){\n          setUser(\"Sorry you aren't authorized!\")\n          return null\n        }\n        return response.json()\n      }).then(response => {\n        if (response && response.message){\n          setUser(response.message)\n        }\n      })\n    }, [])\n\n    const onSubmitClick = (e) => {\n      e.preventDefault();\n      console.log(\"You pressed submit\");\n      console.log(`Rate: ${rate}`);\n      console.log(`Review: ${review}`);\n      setRate('');\n      setReview('');\n\n      console.log(\"You pressed login\")\n\n      let opts = {\n        'businessid': props.business.id,\n        'rating': rate,\n        'review': review\n      }\n      console.log(opts)\n\n      authFetch('/api/rate', {\n        method: 'post',\n        body: JSON.stringify(opts)\n      }).then(r => r.json())\n      .then(data => console.log(data))\n\n\n      handleClose();\n    }\n\n    const onFavoriteClick = (e) => {\n      e.preventDefault();\n      if (favorite === false) {\n        setFavorite(true)\n\n        let opts = {\n          'businessid': props.business.id,\n          'addFavorite': 'add'\n        }\n        console.log(opts);\n\n        authFetch('/api/favorites', {\n          method: 'post',\n          body: JSON.stringify(opts)\n        }).then(r => r.json())\n        .then(data => {\n          console.log(data)\n          console.log(\"Added to favorites!\")\n        });\n        // setFavorite(true)\n      }\n      else {\n        setFavorite(false)\n        let opts = {\n          'businessid': props.business.id,\n          'addFavorite': 'delete'\n        }\n        console.log(opts);\n        authFetch('/api/favorites', {\n          method: 'post',\n          body: JSON.stringify(opts)\n        }).then(r => r.json())\n        .then(data => setFavorite(data.favorite));\n        \n        console.log('Deleted from favorites');\n      }  \n    }\n\n    // Check whether card is already a favorite\n      useEffect(() => {\n      authFetch(`/api/favorites?business_id=${props.business.id}`)\n      .then(response => response.json())\n      .then(data => setFavorite(data.favorite));\n      }, [])\n\n\n      return (\n        <Slide bottom>\n        <div className='Business'>\n          <Card height='100px'>\n            <CardActionArea onClick={(e) => handleOpen(e)}>\n              <CardMedia\n                component='img'\n                height='140'\n                src={props.business.imageSrc}\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h2\" component=\"h2\">\n                  {props.business.name.slice(0, 17)}\n                </Typography>\n                <Typography gutterBottom variant=\"body2\" component=\"p\">\n                  {props.business.address}\n                </Typography>\n                <Typography gutterBottom variant=\"body2\" component=\"p\">\n                  {props.business.city}, {props.business.state} {props.business.zipCode}\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n              {logged ?\n              <div>\n                <CardActions>\n                <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={handleRate}>\n                  Rate\n                </Button>\n                {/* <IconButton onClick={onFavoriteClick}>\n                  <AddIcon style={{ color: '#fdd835' }} />\n                </IconButton> */}\n                {!favorite ? <IconButton onClick={onFavoriteClick}>\n                  <StarBorderIcon style={{ color: '#fdd835' }} />\n                </IconButton>\n                : <IconButton onClick={onFavoriteClick}>\n                <StarIcon style={{ color: '#fdd835' }} />\n                </IconButton>}\n                </CardActions>\n              </div>\n              : <div></div>}\n          </Card>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"business name\"\n            fullWidth={fullWidth}\n            className='custom-modal-style'\n          >\n            <DialogTitle id=\"simple-dialog-title\">\n            <Box display=\"flex\" alignItems=\"center\">\n                <Box flexGrow={1} >{props.business.name}</Box>\n                <Box>\n                {logged ? <div>\n                  <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={handleRate}>\n                    Rate\n                  </Button>\n                  {/* <IconButton onClick={onFavoriteClick}>\n                  <AddIcon style={{ color: '#fdd835' }} />\n                </IconButton> */}\n                  {!favorite ? <IconButton onClick={onFavoriteClick}>\n                    <StarBorderIcon style={{ color: '#fdd835' }} />\n                  </IconButton>\n                  : <IconButton onClick={onFavoriteClick}>\n                  <StarIcon style={{ color: '#fdd835' }} />\n                  </IconButton>}\n                  <IconButton onClick={handleClose}>\n                    <CloseIcon />\n                  </IconButton>\n                  </div> : \n                  <IconButton onClick={handleClose}>\n                    <CloseIcon />\n                  </IconButton>\n                }\n                </Box>\n            </Box>\n        </DialogTitle>\n        <DialogContent>\n          <div className={classes.root}>\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <Typography gutterBottom variant=\"body2\" component=\"p\" className={classes.text}>\n                  {props.business.address}, {props.business.city}, {props.business.state} {props.business.zipCode}\n                </Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <DialogContentText>\n                  Average rating: {props.business.rating}/5\n                  </DialogContentText>\n                 </Grid>\n                 <Grid item xs={6} justify-content='center'><img src={props.business.imageSrc} height='200px'/></Grid>\n                 <Grid item xs={12}>\n                 <Map\n                  id=\"myMap\"\n                  options={{\n                    center: { lat: parseFloat(props.business.latitude), lng: parseFloat(props.business.longitude) },\n                    zoom: 14\n                  }}\n                  onMapLoad={map => {\n                    var lat = parseFloat(props.business.latitude);\n                    var long = parseFloat(props.business.longitude);\n                    var marker = new window.google.maps.Marker({\n                      position: { lat: lat, lng: long },\n                      map: map,\n                      title: 'Restaurant here',\n                      setContent: 'Restaurant here'\n                    });\n                  }}\n                />\n                </Grid>\n                </Grid>\n              </div>\n            </DialogContent>\n          </Dialog>\n          <Dialog\n            open={openRate}\n            onClose={handleClose}\n            aria-labelledby=\"business name\"\n            fullWidth={fullWidth}\n            className='custom-modal-style'\n          >\n            <DialogTitle id=\"simple-dialog-title\">\n            <Box display=\"flex\" alignItems=\"center\">\n                <Box flexGrow={1} >{props.business.name}</Box>\n                <Box>\n                  <IconButton onClick={handleClose}>\n                    <CloseIcon />\n                  </IconButton>\n                </Box>\n            </Box>\n            </DialogTitle>\n            <DialogContent>\n              <div className={classes.root}>\n                <Grid container spacing={3}>\n                 <Grid item xs={12}>\n                  <Typography gutterBottom variant=\"body2\" component=\"p\" className={classes.text}>\n                    {props.business.address}, {props.business.city}, {props.business.state} {props.business.zipCode}\n                  </Typography>\n                 </Grid>\n                 <Grid item xs={6}>\n                  <DialogContent>\n                    <Form onSubmit={onSubmitClick}>\n                      {/* <Form.Group controlId=\"rate\">\n                        <Form.Label>Rate</Form.Label>\n                        {['radio'].map((type) =>(\n                          <div key={`inline-${type}`} className=\"mb-3\">\n                            <Form.Check inline value=\"1\" label=\"1\" type={type} name=\"radio\" id={`inline-${type}-1`} onChange={handleRateChange} />\n                            <Form.Check inline value=\"2\" label=\"2\" type={type} name=\"radio\" id={`inline-${type}-2`} onChange={handleRateChange} />\n                            <Form.Check inline value=\"3\" label=\"3\" type={type} name=\"radio\" id={`inline-${type}-3`} onChange={handleRateChange} />\n                            <Form.Check inline value=\"4\" label=\"4\" type={type} name=\"radio\" id={`inline-${type}-4`} onChange={handleRateChange} />\n                            <Form.Check inline value=\"5\" label=\"5\" type={type} name=\"radio\" id={`inline-${type}-5`} onChange={handleRateChange} />\n                          </div>\n                        ))}\n                      </Form.Group> */}\n                        <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n                          <Typography component=\"legend\">Rate</Typography>\n                          <Rating\n                            name=\"simple-controlled\"\n                            value={rate}\n                            onChange={(event, newValue) => {\n                              setRate(newValue);\n                            }}\n                          />\n                        </Box>\n                      <Form.Group controlId=\"review\">\n                        <Form.Label>Review</Form.Label>\n                        <Form.Control autoFocus type=\"text\" placeholder=\"Review (100 characters)\" value={review} onChange={handleReviewChange} />\n                      </Form.Group>\n                      <Button type=\"submit\" disabled={!validate()}>\n                        Submit\n                      </Button>\n                    </Form>\n                  </DialogContent>\n                 </Grid>\n                 <Grid item xs={6} justify-content='center'><img src={props.business.imageSrc} height='200px'/></Grid>\n                </Grid>\n              </div>\n            </DialogContent>\n          </Dialog>\n        </div>\n        </Slide>\n      );\n  }\n      \n","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Favorites/FavoritesDetail.js",["207","208","209","210","211","212","213","214","215","216","217"],"import React, {useState, useEffect} from 'react';\nimport './FavoritesDetail.css';\nimport Card from '@material-ui/core/Card';\nimport { CardActionArea, DialogContent, Button } from '@material-ui/core';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Box from '@material-ui/core/Box';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport StarIcon from '@material-ui/icons/Star';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {authFetch, useAuth} from \"../../services/authentication\";\nimport Form from \"react-bootstrap/Form\";\nimport Map from '../RestaurantDetail/map'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  text: {\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport function FavoritesDetail(props) {\n    const [businessID, setBusinessID] = useState('')\n    const [review, setReview] = useState('')\n    const [rate, setRate] = useState('')\n\n    const [open, setOpen] = React.useState(false);\n    const [openRate, setOpenRate] = React.useState(false);\n    const fullWidth = true;\n\n    const [logged] = useAuth();\n    const [username, setUser] = useState(\"\");\n    const [favorite, setFavorite] = useState(false);\n    const [initfavorite, setInitFavorite] = useState(false);\n\n    const [selected, setSelected] = useState(false);\n\n    const classes = useStyles();\n\n    const handleOpen = (e) => {\n      setOpen(true);\n      console.log(props.business.id)\n      setBusinessID(props.business.id)\n    };\n\n    const handleClose = () => {\n      setOpen(false);\n      setOpenRate(false);\n    };\n\n    const handleRate = () => {\n      setOpen(false);\n      setOpenRate(true);\n    }\n\n    const handleReviewChange = (e) => {\n      setReview(e.target.value);\n    }\n\n    const handleRateChange = (e) => {\n      setRate(e.target.value);\n    }\n\n    function validate(){\n      return rate.length > 0 && review.length > 0 && review.length < 101;\n    }\n\n    useEffect(() => {\n      fetch(\"/test\").then(res => {\n          return res.json()\n      }).then(res => {\n          console.log(res)\n      })\n      authFetch(\"/api/protected\").then(response => {\n        if (response.status === 401){\n          setUser(\"Sorry you aren't authorized!\")\n          return null\n        }\n        return response.json()\n      }).then(response => {\n        if (response && response.message){\n          setUser(response.message)\n        }\n      })\n    }, [])\n\n    const onSubmitClick = (e) => {\n      e.preventDefault();\n      console.log(\"You pressed submit\");\n      console.log(`Rate: ${rate}`);\n      console.log(`Review: ${review}`);\n      setRate('');\n      setReview('');\n\n      console.log(\"You pressed login\")\n\n      let opts = {\n        'businessid': props.business.id,\n        'rating': rate,\n        'review': review\n      }\n      console.log(opts)\n\n      authFetch('/api/rate', {\n        method: 'post',\n        body: JSON.stringify(opts)\n      }).then(r => r.json())\n      .then(data => console.log(data))\n\n\n      handleClose();\n    }\n\n    const onFavoriteClick = (e) => {\n      e.preventDefault();\n      if (favorite === false) {\n        setFavorite(true)\n\n        let opts = {\n          'businessid': props.business.id,\n          'addFavorite': 'add'\n        }\n        console.log(opts);\n\n        authFetch('/api/favorites', {\n          method: 'post',\n          body: JSON.stringify(opts)\n        }).then(r => r.json())\n        .then(data => {\n          // setFavorite(data.favorite)\n          console.log(\"Added to favorites!\")\n        });\n      }\n      else {\n        setFavorite(false)\n        let opts = {\n          'businessid': props.business.id,\n          'addFavorite': 'delete'\n        }\n        console.log(opts);\n        authFetch('/api/favorites', {\n          method: 'post',\n          body: JSON.stringify(opts)\n        }).then(r => r.json())\n        \n        console.log('Deleted from favorites');\n        window.location.reload();\n      }  \n    }\n\n    // Check whether card is already a favorite\n      useEffect(() => {\n      authFetch(`/api/favorites?business_id=${props.business.id}`)\n      .then(response => response.json())\n      .then(data => setFavorite(data.favorite));\n      }, [])\n\n\n      return (\n        <div className='Business'>\n          <Card height='100px'>\n            <CardActionArea onClick={(e) => handleOpen(e)}>\n              <CardMedia\n                component='img'\n                height='140'\n                src={props.business.imageSrc}\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h2\" component=\"h2\" style={{paddingBottom: '10px'}}>\n                  {props.business.name.slice(0, 22)}\n                </Typography>\n                <Typography gutterBottom variant=\"body2\" component=\"p\">\n                  {props.business.address}\n                </Typography>\n                <Typography gutterBottom variant=\"body2\" component=\"p\">\n                  {props.business.city}, {props.business.state} {props.business.zipCode}\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n                <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={handleRate}>\n                  Rate\n                </Button>\n                {!favorite ? <IconButton onClick={onFavoriteClick}>\n                  <StarBorderIcon style={{ color: '#fdd835' }} />\n                </IconButton>\n                : <IconButton onClick={onFavoriteClick}>\n                <StarIcon style={{ color: '#fdd835' }} />\n                </IconButton>}\n            </CardActions>\n          </Card>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"business name\"\n            fullWidth={fullWidth}\n            className='custom-modal-style'\n          >\n            <DialogTitle id=\"simple-dialog-title\">\n            <Box display=\"flex\" alignItems=\"center\">\n                <Box flexGrow={1} >{props.business.name}</Box>\n                <Box>\n                  <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={handleRate}>\n                    Rate\n                  </Button>\n                  {!favorite ? <IconButton onClick={onFavoriteClick}>\n                    <StarBorderIcon style={{ color: '#fdd835' }} />\n                  </IconButton>\n                  : <IconButton onClick={onFavoriteClick}>\n                  <StarIcon style={{ color: '#fdd835' }} />\n                  </IconButton>}\n                  <IconButton onClick={handleClose}>\n                    <CloseIcon />\n                  </IconButton>\n                </Box>\n            </Box>\n            </DialogTitle>\n            <DialogContent>\n              <div className={classes.root}>\n                <Grid container spacing={3}>\n                 <Grid item xs={12}>\n                  <Typography gutterBottom variant=\"body2\" component=\"p\" className={classes.text}>\n                    {props.business.address}, {props.business.city}, {props.business.state} {props.business.zipCode}\n                  </Typography>\n                 </Grid>\n                 <Grid item xs={6}>\n                  <DialogContentText>\n                    Average rating: {props.business.rating}/5\n                  </DialogContentText>\n                  <DialogContentText>\n                    Genre: {props.business.category} \n                  </DialogContentText>\n                  <DialogContentText>\n                  Number of ratings: {props.business.reviewCount}\n                  </DialogContentText>\n                 </Grid>\n                 <Grid item xs={6} justify-content='center'><img src={props.business.imageSrc} height='200px'/></Grid>\n                 <Grid item xs={12}>\n                 <Map\n                  id=\"myMap\"\n                  options={{\n                    center: { lat: parseFloat(props.business.latitude), lng: parseFloat(props.business.longitude) },\n                    zoom: 14\n                  }}\n                  onMapLoad={map => {\n                    var lat = parseFloat(props.business.latitude);\n                    var long = parseFloat(props.business.longitude);\n                    var marker = new window.google.maps.Marker({\n                      position: { lat: lat, lng: long },\n                      map: map,\n                      title: 'Restaurant here',\n                      setContent: 'Restaurant here'\n                    });\n                  }}\n                />\n\n                 </Grid>\n                </Grid>\n              </div>\n            </DialogContent>\n          </Dialog>\n          <Dialog\n            open={openRate}\n            onClose={handleClose}\n            aria-labelledby=\"business name\"\n            fullWidth={fullWidth}\n            className='custom-modal-style'\n          >\n            <DialogTitle id=\"simple-dialog-title\">\n            <Box display=\"flex\" alignItems=\"center\">\n                <Box flexGrow={1} >{props.business.name}</Box>\n                <Box>\n                  <IconButton onClick={handleClose}>\n                    <CloseIcon />\n                  </IconButton>\n                </Box>\n            </Box>\n            </DialogTitle>\n            <DialogContent>\n              <div className={classes.root}>\n                <Grid container spacing={3}>\n                 <Grid item xs={12}>\n                  <Typography gutterBottom variant=\"body2\" component=\"p\" className={classes.text}>\n                    {props.business.address}, {props.business.city}, {props.business.state} {props.business.zipCode}\n                  </Typography>\n                 </Grid>\n                 <Grid item xs={6}>\n                  <DialogContent>\n                    <Form onSubmit={onSubmitClick}>\n                      <Form.Group controlId=\"rate\">\n                        <Form.Label>Rate</Form.Label>\n                        {['radio'].map((type) =>(\n                          <div key={`inline-${type}`} className=\"mb-3\">\n                            <Form.Check inline value=\"1\" label=\"1\" type={type} name=\"radio\" id={`inline-${type}-1`} onChange={handleRateChange} />\n                            <Form.Check inline value=\"2\" label=\"2\" type={type} name=\"radio\" id={`inline-${type}-2`} onChange={handleRateChange} />\n                            <Form.Check inline value=\"3\" label=\"3\" type={type} name=\"radio\" id={`inline-${type}-3`} onChange={handleRateChange} />\n                            <Form.Check inline value=\"4\" label=\"4\" type={type} name=\"radio\" id={`inline-${type}-4`} onChange={handleRateChange} />\n                            <Form.Check inline value=\"5\" label=\"5\" type={type} name=\"radio\" id={`inline-${type}-5`} onChange={handleRateChange} />\n                          </div>\n                        ))}\n                      </Form.Group>\n                      <Form.Group controlId=\"review\">\n                        <Form.Label>Review</Form.Label>\n                        <Form.Control autoFocus type=\"text\" placeholder=\"Review (100 characters)\" value={review} onChange={handleReviewChange} />\n                      </Form.Group>\n                      <Button type=\"submit\" disabled={!validate()}>\n                        Submit\n                      </Button>\n                    </Form>\n                  </DialogContent>\n                 </Grid>\n                 <Grid item xs={6} justify-content='center'><img src={props.business.imageSrc} height='200px'/></Grid>\n                </Grid>\n              </div>\n            </DialogContent>\n          </Dialog>\n        </div>\n      );\n  }\n      \n\n    // return (\n    //     <div className='Business'>\n    //       <Card height='100px'>\n    //         <CardActionArea onClick={(e) => handleOpen(e)}>\n    //           <CardMedia\n    //             component='img'\n    //             height='140'\n    //             src={props.business.imageSrc}\n    //           />\n    //           <CardContent>\n    //             <Typography gutterBottom variant=\"h2\" component=\"h2\">\n    //               {props.business.name}\n    //             </Typography>\n    //             <Typography gutterBottom variant=\"body2\" component=\"p\">\n    //               {props.business.address}\n    //             </Typography>\n    //             <Typography gutterBottom variant=\"body2\" component=\"p\">\n    //               {props.business.city}, {props.business.state} {props.business.zipCode}\n    //             </Typography>\n    //           </CardContent>\n    //         </CardActionArea>\n    //           {logged ?\n    //           <div>\n    //             <CardActions>\n    //             <Button size=\"small\" color=\"secondary\" onClick={handleRate}>\n    //               Rate\n    //             </Button>\n    //             {!favorite ? <Button size=\"small\" color='primary' onClick={handleFavorite}>\n    //               Add Favorite\n    //             </Button>\n    //             : <Button size=\"small\" color='primary' variant='outlined' onClick={handleFavorite}\n    //             >Favorite\n    //             </Button>}\n    //             </CardActions>\n    //           </div>\n    //           : <div></div>}\n    //       </Card>\n    //       <Dialog\n    //         open={open}\n    //         onClose={handleClose}\n    //         aria-labelledby=\"business name\"\n    //         fullWidth={fullWidth}\n    //         className='custom-modal-style'\n    //       >\n    //         <DialogTitle id=\"simple-dialog-title\">\n    //         <Box display=\"flex\" alignItems=\"center\">\n    //             <Box flexGrow={1} >{props.business.name}</Box>\n    //             <Box>\n    //             {logged ? <div>\n    //               <Button size=\"small\" color=\"primary\" onClick={handleRate}>\n    //                 Rate\n    //               </Button>\n    //               <IconButton>\n    //                 <StarOutlineIcon />\n    //               </IconButton>\n    //               <IconButton onClick={handleClose}>\n    //                 <CloseIcon />\n    //               </IconButton>\n    //               </div> : \n    //               <IconButton onClick={handleClose}>\n    //                 <CloseIcon />\n    //               </IconButton>\n    //             }\n    //             </Box>\n    //         </Box>\n    //         </DialogTitle>\n    //         <DialogContent>\n    //           <div className={classes.root}>\n    //             <Grid container spacing={3}>\n    //              <Grid item xs={12}>\n    //               <Typography gutterBottom variant=\"body2\" component=\"p\" className={classes.text}>\n    //                 {props.business.address}, {props.business.city}, {props.business.state} {props.business.zipCode}\n    //               </Typography>\n    //              </Grid>\n    //              <Grid item xs={6}>\n    //               <DialogContentText>\n    //                 Average rating: {props.business.rating}/5\n    //               </DialogContentText>\n    //               <DialogContentText>\n    //                 Genre: {props.business.category}\n    //               </DialogContentText>\n    //              </Grid>\n    //              <Grid item xs={6} justify-content='center'><img src={props.business.imageSrc} height='200px'/></Grid>\n    //              <Grid item xs={12}>(Google Maps API goes here)</Grid>\n    //             </Grid>\n    //           </div>\n    //         </DialogContent>\n    //       </Dialog>\n    //       <Dialog\n    //         open={openRate}\n    //         onClose={handleClose}\n    //         aria-labelledby=\"business name\"\n    //         fullWidth={fullWidth}\n    //         className='custom-modal-style'\n    //       >\n    //         <DialogTitle id=\"simple-dialog-title\">\n    //         <Box display=\"flex\" alignItems=\"center\">\n    //             <Box flexGrow={1} >{props.business.name}</Box>\n    //             <Box>\n    //               <IconButton onClick={handleClose}>\n    //                 <CloseIcon />\n    //               </IconButton>\n    //             </Box>\n    //         </Box>\n    //         </DialogTitle>\n    //         <DialogContent>\n    //           <div className={classes.root}>\n    //             <Grid container spacing={3}>\n    //              <Grid item xs={12}>\n    //               <Typography gutterBottom variant=\"body2\" component=\"p\" className={classes.text}>\n    //                 {props.business.address}, {props.business.city}, {props.business.state} {props.business.zipCode}\n    //               </Typography>\n    //              </Grid>\n    //              <Grid item xs={6}>\n    //               <DialogContent>\n    //                 <Form onSubmit={onSubmitClick}>\n    //                   <Form.Group controlId=\"rate\">\n    //                     <Form.Label>Rate</Form.Label>\n    //                     {['radio'].map((type) =>(\n    //                       <div key={`inline-${type}`} className=\"mb-3\">\n    //                         <Form.Check inline value=\"1\" label=\"1\" type={type} name=\"radio\" id={`inline-${type}-1`} onChange={handleRateChange} />\n    //                         <Form.Check inline value=\"2\" label=\"2\" type={type} name=\"radio\" id={`inline-${type}-2`} onChange={handleRateChange} />\n    //                         <Form.Check inline value=\"3\" label=\"3\" type={type} name=\"radio\" id={`inline-${type}-3`} onChange={handleRateChange} />\n    //                         <Form.Check inline value=\"4\" label=\"4\" type={type} name=\"radio\" id={`inline-${type}-4`} onChange={handleRateChange} />\n    //                         <Form.Check inline value=\"5\" label=\"5\" type={type} name=\"radio\" id={`inline-${type}-5`} onChange={handleRateChange} />\n    //                       </div>\n    //                     ))}\n    //                   </Form.Group>\n    //                   <Form.Group controlId=\"review\">\n    //                     <Form.Label>Review</Form.Label>\n    //                     <Form.Control autoFocus type=\"text\" placeholder=\"Review (100 characters)\" value={review} onChange={handleReviewChange} />\n    //                   </Form.Group>\n    //                   <Button type=\"submit\" disabled={!validate()}>\n    //                     Submit\n    //                   </Button>\n    //                 </Form>\n    //               </DialogContent>\n    //              </Grid>\n    //              <Grid item xs={6} justify-content='center'><img src={props.business.imageSrc} height='200px'/></Grid>\n    //             </Grid>\n    //           </div>\n    //         </DialogContent>\n    //       </Dialog>\n    //     </div>\n        // <div className=\"Business\">\n        //   <div className=\"image-container\">\n        //     <img src={props.business.imageSrc} alt=''/>\n        //   </div>\n        //   <h2>{props.business.name}</h2>\n        //   <div className=\"Business-information\">\n        //     <div className=\"Business-address\">\n        //       <p>{props.business.address}</p>\n        //       <p>{props.business.city}</p>\n        //       <p>{props.business.state} {props.business.zipCode}</p>\n        //     </div>\n        //     <div className=\"Business-reviews\">\n        //       <h3>{props.business.category.toUpperCase()}</h3>\n        //       <h3 className=\"rating\">{props.business.rating} stars</h3>\n        //       <p>{props.business.reviewCount} reviews</p>\n        //     </div>\n        //   </div>\n        // </div>\n        // );\n","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/ChatBot/ChatBot.js",["218","219"],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/Context.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/Hooks/useLocation.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Recommendations/Recs.js",["220","221"],"import React, {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {authFetch} from \"../../services/authentication\";\nimport { yelpBusID } from '../../services/yelp';\nimport {RecsList} from './RecsList';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Container from \"@material-ui/core/Container\";\nimport Fade from 'react-reveal/Fade';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '60%',\n    padding: '10px',\n    margin: 'auto'\n  },\n  text: {\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\n\nexport function Recs() {\n  const [results, setResults] = useState([]);\n  const classes = useStyles();\n\n  useEffect(() => {\n    const abortController = new AbortController()\n    const signal = abortController.signal\n\n    authFetch(\"/api/recs\", { signal: signal }).then(res => {\n        return res.json()\n    }).then(res => {\n        console.log(res['recs'])\n        let businesses = res['recs']\n        \n        if (businesses !== undefined) {\n          let bus = []   \n          for(let i = 4; i < 7; i++) {\n            bus.push(yelpBusID.searchByID(businesses[i]))\n          }\n\n          Promise.all(bus).then((res) => {\n            return res\n          }).then((business) => {\n            setResults(business)\n          })\n        }\n\n    })\n\n\n    return function cleanup() {\n      abortController.abort()\n    }\n\n  }, [])\n\n  return(\n    <div>\n      {results.length != 0  ? <Fade><Container><Typography variant=\"h2\" align=\"center\">\n          Your generated Recommendations!\n      </Typography><RecsList businesses={results} /></Container></Fade>\n      : <Container style={{margin: '0 auto', position: 'absolute', top: '50%', left: '50%'}}>\n        <CircularProgress style={{color: 'orange'}}/>\n        </Container>}\n    </div>\n  );\n    \n}\n      ","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/RestaurantContainer/RestaurantContainer.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Chat/Chat.js",["222","223","224","225"],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Recommendations/RecsList.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/Hooks/useLoading.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/Constants.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Restaurant/index.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Bubble/index.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/ResizableTextarea/index.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Recommendations/RecsDetail.js",["226","227","228","229","230","231","232","233","234","235","236"],"import React, {useState, useEffect} from 'react';\nimport './RecsDetail.css';\nimport Card from '@material-ui/core/Card';\nimport { CardActionArea, DialogContent, Button } from '@material-ui/core';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Box from '@material-ui/core/Box';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport StarIcon from '@material-ui/icons/Star';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {authFetch, useAuth} from \"../../services/authentication\";\nimport Form from \"react-bootstrap/Form\";\nimport Map from '../RestaurantDetail/map'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  text: {\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport function RecsDetail(props) {\n    const [businessID, setBusinessID] = useState('')\n    const [review, setReview] = useState('')\n    const [rate, setRate] = useState('')\n\n    const [open, setOpen] = React.useState(false);\n    const [openRate, setOpenRate] = React.useState(false);\n    const fullWidth = true;\n\n    const [logged] = useAuth();\n    const [username, setUser] = useState(\"\");\n    const [favorite, setFavorite] = useState(false);\n    const [initfavorite, setInitFavorite] = useState(false);\n\n    const [selected, setSelected] = useState(false);\n\n    const classes = useStyles();\n\n    const handleOpen = (e) => {\n      setOpen(true);\n      console.log(props.business.id)\n      setBusinessID(props.business.id)\n    };\n\n    const handleClose = () => {\n      setOpen(false);\n      setOpenRate(false);\n    };\n\n    const handleRate = () => {\n      setOpen(false);\n      setOpenRate(true);\n    }\n\n    const handleReviewChange = (e) => {\n      setReview(e.target.value);\n    }\n\n    const handleRateChange = (e) => {\n      setRate(e.target.value);\n    }\n\n    function validate(){\n      return rate.length > 0 && review.length > 0 && review.length < 101;\n    }\n\n    useEffect(() => {\n      fetch(\"/test\").then(res => {\n          return res.json()\n      }).then(res => {\n          console.log(res)\n      })\n      authFetch(\"/api/protected\").then(response => {\n        if (response.status === 401){\n          setUser(\"Sorry you aren't authorized!\")\n          return null\n        }\n        return response.json()\n      }).then(response => {\n        if (response && response.message){\n          setUser(response.message)\n        }\n      })\n    }, [])\n\n    const onSubmitClick = (e) => {\n      e.preventDefault();\n      console.log(\"You pressed submit\");\n      console.log(`Rate: ${rate}`);\n      console.log(`Review: ${review}`);\n      setRate('');\n      setReview('');\n\n      console.log(\"You pressed login\")\n\n      let opts = {\n        'businessid': props.business.id,\n        'rating': rate,\n        'review': review\n      }\n      console.log(opts)\n\n      authFetch('/api/rate', {\n        method: 'post',\n        body: JSON.stringify(opts)\n      }).then(r => r.json())\n      .then(data => console.log(data))\n\n\n      handleClose();\n    }\n\n    const onFavoriteClick = (e) => {\n      e.preventDefault();\n      if (favorite === false) {\n        setFavorite(true)\n\n        let opts = {\n          'businessid': props.business.id,\n          'addFavorite': 'add'\n        }\n        console.log(opts);\n\n        authFetch('/api/favorites', {\n          method: 'post',\n          body: JSON.stringify(opts)\n        }).then(r => r.json())\n        .then(data => {\n          // setFavorite(data.favorite)\n          console.log(\"Added to favorites!\")\n        });\n      }\n      else {\n        setFavorite(false)\n        let opts = {\n          'businessid': props.business.id,\n          'addFavorite': 'delete'\n        }\n        console.log(opts);\n        authFetch('/api/favorites', {\n          method: 'post',\n          body: JSON.stringify(opts)\n        }).then(r => r.json())\n        \n        console.log('Deleted from favorites');\n        window.location.reload();\n      }  \n    }\n\n    // Check whether card is already a favorite\n      useEffect(() => {\n      authFetch(`/api/favorites?business_id=${props.business.id}`)\n      .then(response => response.json())\n      .then(data => setFavorite(data.favorite));\n      }, [])\n\n\n      return (\n        <div className='Business'>\n          <Card height='100px'>\n            <CardActionArea onClick={(e) => handleOpen(e)}>\n              <CardMedia\n                component='img'\n                height='140'\n                src={props.business.imageSrc}\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h2\" component=\"h2\">\n                  {props.business.name.slice(0, 22)}\n                </Typography>\n                <Typography gutterBottom variant=\"body2\" component=\"p\">\n                  {props.business.address}\n                </Typography>\n                <Typography gutterBottom variant=\"body2\" component=\"p\">\n                  {props.business.city}, {props.business.state} {props.business.zipCode}\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n                <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={handleRate}>\n                  Rate\n                </Button>\n                {!favorite ? <IconButton onClick={onFavoriteClick}>\n                  <StarBorderIcon style={{ color: '#fdd835' }} />\n                </IconButton>\n                : <IconButton onClick={onFavoriteClick}>\n                <StarIcon style={{ color: '#fdd835' }} />\n                </IconButton>}\n            </CardActions>\n          </Card>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"business name\"\n            fullWidth={fullWidth}\n            className='custom-modal-style'\n          >\n            <DialogTitle id=\"simple-dialog-title\">\n            <Box display=\"flex\" alignItems=\"center\">\n                <Box flexGrow={1} >{props.business.name}</Box>\n                <Box>\n                  <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={handleRate}>\n                    Rate\n                  </Button>\n                  {!favorite ? <IconButton onClick={onFavoriteClick}>\n                    <StarBorderIcon style={{ color: '#fdd835' }} />\n                  </IconButton>\n                  : <IconButton onClick={onFavoriteClick}>\n                  <StarIcon style={{ color: '#fdd835' }} />\n                  </IconButton>}\n                  <IconButton onClick={handleClose}>\n                    <CloseIcon />\n                  </IconButton>\n                </Box>\n            </Box>\n            </DialogTitle>\n            <DialogContent>\n              <div className={classes.root}>\n                <Grid container spacing={3}>\n                 <Grid item xs={12}>\n                  <Typography gutterBottom variant=\"body2\" component=\"p\" className={classes.text}>\n                    {props.business.address}, {props.business.city}, {props.business.state} {props.business.zipCode}\n                  </Typography>\n                 </Grid>\n                 <Grid item xs={6}>\n                  <DialogContentText>\n                    Average rating: {props.business.rating}/5\n                  </DialogContentText>\n                  <DialogContentText>\n                    Genre: {props.business.category}\n                  </DialogContentText>\n                 </Grid>\n                 <Grid item xs={6} justify-content='center'><img src={props.business.imageSrc} height='200px'/></Grid>\n                 <Grid item xs={12}>\n                 <Map\n                  id=\"myMap\"\n                  options={{\n                    center: { lat: parseFloat(props.business.latitude), lng: parseFloat(props.business.longitude) },\n                    zoom: 14\n                  }}\n                  onMapLoad={map => {\n                    var lat = parseFloat(props.business.latitude);\n                    var long = parseFloat(props.business.longitude);\n                    var marker = new window.google.maps.Marker({\n                      position: { lat: lat, lng: long },\n                      map: map,\n                      title: 'Restaurant here',\n                      setContent: 'Restaurant here'\n                    });\n                  }}\n                />\n\n                 </Grid>\n                </Grid>\n              </div>\n            </DialogContent>\n          </Dialog>\n          <Dialog\n            open={openRate}\n            onClose={handleClose}\n            aria-labelledby=\"business name\"\n            fullWidth={fullWidth}\n            className='custom-modal-style'\n          >\n            <DialogTitle id=\"simple-dialog-title\">\n            <Box display=\"flex\" alignItems=\"center\">\n                <Box flexGrow={1} >{props.business.name}</Box>\n                <Box>\n                  <IconButton onClick={handleClose}>\n                    <CloseIcon />\n                  </IconButton>\n                </Box>\n            </Box>\n            </DialogTitle>\n            <DialogContent>\n              <div className={classes.root}>\n                <Grid container spacing={3}>\n                 <Grid item xs={12}>\n                  <Typography gutterBottom variant=\"body2\" component=\"p\" className={classes.text}>\n                    {props.business.address}, {props.business.city}, {props.business.state} {props.business.zipCode}\n                  </Typography>\n                 </Grid>\n                 <Grid item xs={6}>\n                  <DialogContent>\n                    <Form onSubmit={onSubmitClick}>\n                      <Form.Group controlId=\"rate\">\n                        <Form.Label>Rate</Form.Label>\n                        {['radio'].map((type) =>(\n                          <div key={`inline-${type}`} className=\"mb-3\">\n                            <Form.Check inline value=\"1\" label=\"1\" type={type} name=\"radio\" id={`inline-${type}-1`} onChange={handleRateChange} />\n                            <Form.Check inline value=\"2\" label=\"2\" type={type} name=\"radio\" id={`inline-${type}-2`} onChange={handleRateChange} />\n                            <Form.Check inline value=\"3\" label=\"3\" type={type} name=\"radio\" id={`inline-${type}-3`} onChange={handleRateChange} />\n                            <Form.Check inline value=\"4\" label=\"4\" type={type} name=\"radio\" id={`inline-${type}-4`} onChange={handleRateChange} />\n                            <Form.Check inline value=\"5\" label=\"5\" type={type} name=\"radio\" id={`inline-${type}-5`} onChange={handleRateChange} />\n                          </div>\n                        ))}\n                      </Form.Group>\n                      <Form.Group controlId=\"review\">\n                        <Form.Label>Review</Form.Label>\n                        <Form.Control autoFocus type=\"text\" placeholder=\"Review (100 characters)\" value={review} onChange={handleReviewChange} />\n                      </Form.Group>\n                      <Button type=\"submit\" disabled={!validate()}>\n                        Submit\n                      </Button>\n                    </Form>\n                  </DialogContent>\n                 </Grid>\n                 <Grid item xs={6} justify-content='center'><img src={props.business.imageSrc} height='200px'/></Grid>\n                </Grid>\n              </div>\n            </DialogContent>\n          </Dialog>\n        </div>\n      );\n  }\n      \n\n    // return (\n    //     <div className='Business'>\n    //       <Card height='100px'>\n    //         <CardActionArea onClick={(e) => handleOpen(e)}>\n    //           <CardMedia\n    //             component='img'\n    //             height='140'\n    //             src={props.business.imageSrc}\n    //           />\n    //           <CardContent>\n    //             <Typography gutterBottom variant=\"h2\" component=\"h2\">\n    //               {props.business.name}\n    //             </Typography>\n    //             <Typography gutterBottom variant=\"body2\" component=\"p\">\n    //               {props.business.address}\n    //             </Typography>\n    //             <Typography gutterBottom variant=\"body2\" component=\"p\">\n    //               {props.business.city}, {props.business.state} {props.business.zipCode}\n    //             </Typography>\n    //           </CardContent>\n    //         </CardActionArea>\n    //           {logged ?\n    //           <div>\n    //             <CardActions>\n    //             <Button size=\"small\" color=\"secondary\" onClick={handleRate}>\n    //               Rate\n    //             </Button>\n    //             {!favorite ? <Button size=\"small\" color='primary' onClick={handleFavorite}>\n    //               Add Favorite\n    //             </Button>\n    //             : <Button size=\"small\" color='primary' variant='outlined' onClick={handleFavorite}\n    //             >Favorite\n    //             </Button>}\n    //             </CardActions>\n    //           </div>\n    //           : <div></div>}\n    //       </Card>\n    //       <Dialog\n    //         open={open}\n    //         onClose={handleClose}\n    //         aria-labelledby=\"business name\"\n    //         fullWidth={fullWidth}\n    //         className='custom-modal-style'\n    //       >\n    //         <DialogTitle id=\"simple-dialog-title\">\n    //         <Box display=\"flex\" alignItems=\"center\">\n    //             <Box flexGrow={1} >{props.business.name}</Box>\n    //             <Box>\n    //             {logged ? <div>\n    //               <Button size=\"small\" color=\"primary\" onClick={handleRate}>\n    //                 Rate\n    //               </Button>\n    //               <IconButton>\n    //                 <StarOutlineIcon />\n    //               </IconButton>\n    //               <IconButton onClick={handleClose}>\n    //                 <CloseIcon />\n    //               </IconButton>\n    //               </div> : \n    //               <IconButton onClick={handleClose}>\n    //                 <CloseIcon />\n    //               </IconButton>\n    //             }\n    //             </Box>\n    //         </Box>\n    //         </DialogTitle>\n    //         <DialogContent>\n    //           <div className={classes.root}>\n    //             <Grid container spacing={3}>\n    //              <Grid item xs={12}>\n    //               <Typography gutterBottom variant=\"body2\" component=\"p\" className={classes.text}>\n    //                 {props.business.address}, {props.business.city}, {props.business.state} {props.business.zipCode}\n    //               </Typography>\n    //              </Grid>\n    //              <Grid item xs={6}>\n    //               <DialogContentText>\n    //                 Average rating: {props.business.rating}/5\n    //               </DialogContentText>\n    //               <DialogContentText>\n    //                 Genre: {props.business.category}\n    //               </DialogContentText>\n    //              </Grid>\n    //              <Grid item xs={6} justify-content='center'><img src={props.business.imageSrc} height='200px'/></Grid>\n    //              <Grid item xs={12}>(Google Maps API goes here)</Grid>\n    //             </Grid>\n    //           </div>\n    //         </DialogContent>\n    //       </Dialog>\n    //       <Dialog\n    //         open={openRate}\n    //         onClose={handleClose}\n    //         aria-labelledby=\"business name\"\n    //         fullWidth={fullWidth}\n    //         className='custom-modal-style'\n    //       >\n    //         <DialogTitle id=\"simple-dialog-title\">\n    //         <Box display=\"flex\" alignItems=\"center\">\n    //             <Box flexGrow={1} >{props.business.name}</Box>\n    //             <Box>\n    //               <IconButton onClick={handleClose}>\n    //                 <CloseIcon />\n    //               </IconButton>\n    //             </Box>\n    //         </Box>\n    //         </DialogTitle>\n    //         <DialogContent>\n    //           <div className={classes.root}>\n    //             <Grid container spacing={3}>\n    //              <Grid item xs={12}>\n    //               <Typography gutterBottom variant=\"body2\" component=\"p\" className={classes.text}>\n    //                 {props.business.address}, {props.business.city}, {props.business.state} {props.business.zipCode}\n    //               </Typography>\n    //              </Grid>\n    //              <Grid item xs={6}>\n    //               <DialogContent>\n    //                 <Form onSubmit={onSubmitClick}>\n    //                   <Form.Group controlId=\"rate\">\n    //                     <Form.Label>Rate</Form.Label>\n    //                     {['radio'].map((type) =>(\n    //                       <div key={`inline-${type}`} className=\"mb-3\">\n    //                         <Form.Check inline value=\"1\" label=\"1\" type={type} name=\"radio\" id={`inline-${type}-1`} onChange={handleRateChange} />\n    //                         <Form.Check inline value=\"2\" label=\"2\" type={type} name=\"radio\" id={`inline-${type}-2`} onChange={handleRateChange} />\n    //                         <Form.Check inline value=\"3\" label=\"3\" type={type} name=\"radio\" id={`inline-${type}-3`} onChange={handleRateChange} />\n    //                         <Form.Check inline value=\"4\" label=\"4\" type={type} name=\"radio\" id={`inline-${type}-4`} onChange={handleRateChange} />\n    //                         <Form.Check inline value=\"5\" label=\"5\" type={type} name=\"radio\" id={`inline-${type}-5`} onChange={handleRateChange} />\n    //                       </div>\n    //                     ))}\n    //                   </Form.Group>\n    //                   <Form.Group controlId=\"review\">\n    //                     <Form.Label>Review</Form.Label>\n    //                     <Form.Control autoFocus type=\"text\" placeholder=\"Review (100 characters)\" value={review} onChange={handleReviewChange} />\n    //                   </Form.Group>\n    //                   <Button type=\"submit\" disabled={!validate()}>\n    //                     Submit\n    //                   </Button>\n    //                 </Form>\n    //               </DialogContent>\n    //              </Grid>\n    //              <Grid item xs={6} justify-content='center'><img src={props.business.imageSrc} height='200px'/></Grid>\n    //             </Grid>\n    //           </div>\n    //         </DialogContent>\n    //       </Dialog>\n    //     </div>\n        // <div className=\"Business\">\n        //   <div className=\"image-container\">\n        //     <img src={props.business.imageSrc} alt=''/>\n        //   </div>\n        //   <h2>{props.business.name}</h2>\n        //   <div className=\"Business-information\">\n        //     <div className=\"Business-address\">\n        //       <p>{props.business.address}</p>\n        //       <p>{props.business.city}</p>\n        //       <p>{props.business.state} {props.business.zipCode}</p>\n        //     </div>\n        //     <div className=\"Business-reviews\">\n        //       <h3>{props.business.category.toUpperCase()}</h3>\n        //       <h3 className=\"rating\">{props.business.rating} stars</h3>\n        //       <p>{props.business.reviewCount} reviews</p>\n        //     </div>\n        //   </div>\n        // </div>\n        // );\n","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/ResizableTextarea/ResizableTextarea.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Bubble/Bubble.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Restaurant/Restaurant.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Profile/ReviewDetail.js",["237","238","239","240","241","242","243"],"import React, {useState, useEffect} from 'react';\nimport { DialogContent, Button } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {authFetch, useAuth} from \"../../services/authentication\";\nimport Form from \"react-bootstrap/Form\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Rating from '@material-ui/lab/Rating';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    text: {\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }));\n\nexport function ReviewDetail(props) {\n\n    const [openConfirm, setOpenConfirm] = useState(false);\n    const [openEdit, setOpenEdit] = useState(false);\n    const [text, setText] = useState(props.review.text);\n    const [rate, setRate] = useState(`${props.review.rating}`);\n    const [rate1, setRate1] = useState(false);\n    const [rate2, setRate2] = useState(false);\n    const [rate3, setRate3] = useState(false);\n    const [rate4, setRate4] = useState(false);\n    const [rate5, setRate5] = useState(false);\n\n    const classes = useStyles();\n\n    const handleClose = () => {\n        setOpenConfirm(false)\n        setOpenEdit(false)\n        setRate1(false);\n        setRate2(false);\n        setRate3(false);\n        setRate4(false);\n        setRate5(false);\n    }\n\n    const handleOpenConfirm = () => {\n        setOpenConfirm(true)\n    }\n\n    const handleOpenEdit = () => {\n        setOpenEdit(true);\n        handleInitRate();\n    }\n\n    const onDelete = () => {\n        let opts = {\n            'review_id': props.review.review_id\n        }\n        console.log(opts)\n\n        authFetch('/api/delete_review', {\n            method: 'post',\n            body: JSON.stringify(opts)\n        }).then(r => r.json())\n        .then(data => console.log(data))\n\n        handleClose();\n        window.location.reload()\n    }\n\n    const handleReviewChange = (e) => {\n        setText(e.target.value);\n      }\n  \n    const handleRateChange = (e) => {\n        setRate(e.target.value);\n        switch (e.target.value) {\n            case '1':\n                setRate1(true);\n                setRate2(false);\n                setRate3(false);\n                setRate4(false);\n                setRate5(false);\n                break;\n            case '2':\n                setRate1(false);\n                setRate2(true);\n                setRate3(false);\n                setRate4(false);\n                setRate5(false);\n                break;\n            case '3':\n                setRate1(false);\n                setRate2(false);\n                setRate3(true);\n                setRate4(false);\n                setRate5(false);\n                break;\n            case '4':\n                setRate1(false);\n                setRate2(false);\n                setRate3(false);\n                setRate4(true);\n                setRate5(false);\n                break;\n            case '5':\n                setRate1(false);\n                setRate2(false);\n                setRate3(false);\n                setRate4(false);\n                setRate5(true);\n                break;\n        }\n    }\n\n    const handleInitRate = () => {\n        switch (props.review.rating) {\n            case 1:\n                setRate1(true);\n                break;\n            case 2:\n                setRate2(true);\n                break;\n            case 3:\n                setRate3(true);\n                break;\n            case 4:\n                setRate4(true);\n                break;\n            case 5:\n                setRate5(true);\n                break;\n        }\n    }\n\n    const validate = () => {\n        return rate.length > 0 && text.length > 0 && text.length < 101 && !(props.review.rating == rate && props.review.text == text);\n    }\n\n    const onEdit = (e) => {\n        e.preventDefault();\n        let opts = {\n            'review_id': props.review.review_id,\n            'rating': rate,\n            'review': text\n        }\n\n        authFetch('/api/edit_review', {\n            method: 'post',\n            body: JSON.stringify(opts)\n        }).then(r => r.json())\n        .then(data => console.log(data))\n\n        handleClose();\n        window.location.reload()\n    }\n\n    const fullWidth = true;\n\n    return (\n        <div>\n            <Grid container style={{ 'padding-top': '10px', 'padding-bottom': '10px'}} border={1}>\n                <Grid item xs={11}>\n                    <Typography variant='h5' display=\"inline\">{props.review.business_name}</Typography>\n                    <br></br>\n                    <Rating name=\"read-only\" value={props.review.rating} readOnly />\n                    <br></br>\n                    <Typography variant='p' display=\"inline\">\"{props.review.text}\"</Typography>\n                </Grid>\n                <Grid item xs={1}>\n                    <IconButton onClick={handleOpenEdit}>\n                        <EditIcon />\n                    </IconButton>\n                    <IconButton onClick={handleOpenConfirm}>\n                        <DeleteIcon />\n                    </IconButton>\n                </Grid>\n            </Grid>\n            <Dialog\n                open={openConfirm}\n                onClose={handleClose}\n                aria-labelledby=\"business name\"\n                fullWidth={fullWidth}\n                className='custom-modal-style'\n                disableBackdropClick\n            >\n                <DialogTitle id='simple-dialog-title'>\n                    <Typography>Are you sure about deleting this review?</Typography>\n                </DialogTitle>\n                <DialogContent>\n                    <Button size='small' variant='contained' color='secondary' style={{'margin-right': '20px'}} onClick={onDelete}>YES</Button>\n                    <Button size='small' variant='outlined' color='secondary' onClick={handleClose}>NO</Button>\n                </DialogContent>\n            </Dialog>\n            <Dialog\n                open={openEdit}\n                onClose={handleClose}\n                aria-labelledby='review name'\n                fullWidth={fullWidth}\n                className='custom-modal-style'\n                disableBackdropClick\n            >\n                <DialogTitle id=\"simple-dialog-title\">\n                <Box display=\"flex\" alignItems=\"center\">\n                    <Box flexGrow={1} >{props.review.business_name}</Box>\n                    <Box>\n                    <IconButton onClick={handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    </Box>\n                </Box>\n                </DialogTitle>\n                <DialogContent>\n                <div className={classes.root}>\n                    <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                    <Typography gutterBottom variant=\"body2\" component=\"p\" className={classes.text}>\n                        {props.review.address}, {props.review.city}, {props.review.state} {props.review.zipCode}\n                    </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                    <DialogContent>\n                        <Form onSubmit={onEdit}>\n                        <Form.Group controlId=\"rate\">\n                            <Form.Label>Rate</Form.Label>\n                            {['radio'].map((type) =>(\n                            <div key={`inline-${type}`} className=\"mb-3\">\n                                <Form.Check inline value=\"1\" label=\"1\" type={type} name=\"radio\" id={`inline-${type}-1`} onChange={handleRateChange} checked={rate1} />\n                                <Form.Check inline value=\"2\" label=\"2\" type={type} name=\"radio\" id={`inline-${type}-2`} onChange={handleRateChange} checked={rate2} />\n                                <Form.Check inline value=\"3\" label=\"3\" type={type} name=\"radio\" id={`inline-${type}-3`} onChange={handleRateChange} checked={rate3} />\n                                <Form.Check inline value=\"4\" label=\"4\" type={type} name=\"radio\" id={`inline-${type}-4`} onChange={handleRateChange} checked={rate4} />\n                                <Form.Check inline value=\"5\" label=\"5\" type={type} name=\"radio\" id={`inline-${type}-5`} onChange={handleRateChange} checked={rate5} />\n                            </div>\n                            ))}\n                        </Form.Group>\n                        <Form.Group controlId=\"review\">\n                            <Form.Label>Review</Form.Label>\n                            <Form.Control autoFocus type=\"text\" placeholder=\"Review (100 characters)\" value={text} onChange={handleReviewChange} />\n                        </Form.Group>\n                        <Button type=\"submit\" disabled={!validate()}>\n                            Submit\n                        </Button>\n                        </Form>\n                    </DialogContent>\n                    </Grid>\n                    <Grid item xs={6} justify-content='center'><img src={props.review.imageSrc} height='200px'/></Grid>\n                    </Grid>\n                </div>\n                </DialogContent>\n            </Dialog>\n        </div>\n    )\n}",{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","severity":1,"message":"249","line":2,"column":49,"nodeType":"250","messageId":"251","endLine":2,"endColumn":56},{"ruleId":"248","severity":1,"message":"252","line":2,"column":58,"nodeType":"250","messageId":"251","endLine":2,"endColumn":62},{"ruleId":"248","severity":1,"message":"253","line":9,"column":10,"nodeType":"250","messageId":"251","endLine":9,"endColumn":29},{"ruleId":"248","severity":1,"message":"254","line":1,"column":27,"nodeType":"250","messageId":"251","endLine":1,"endColumn":36},{"ruleId":"248","severity":1,"message":"255","line":44,"column":11,"nodeType":"250","messageId":"251","endLine":44,"endColumn":18},{"ruleId":"248","severity":1,"message":"256","line":13,"column":7,"nodeType":"250","messageId":"251","endLine":13,"endColumn":16},{"ruleId":"257","severity":1,"message":"258","line":62,"column":23,"nodeType":"259","messageId":"260","endLine":62,"endColumn":25},{"ruleId":"248","severity":1,"message":"254","line":1,"column":27,"nodeType":"250","messageId":"251","endLine":1,"endColumn":36},{"ruleId":"248","severity":1,"message":"261","line":36,"column":10,"nodeType":"250","messageId":"251","endLine":36,"endColumn":18},{"ruleId":"248","severity":1,"message":"262","line":6,"column":22,"nodeType":"250","messageId":"251","endLine":6,"endColumn":25},{"ruleId":"248","severity":1,"message":"263","line":6,"column":27,"nodeType":"250","messageId":"251","endLine":6,"endColumn":33},{"ruleId":"248","severity":1,"message":"264","line":18,"column":12,"nodeType":"250","messageId":"251","endLine":18,"endColumn":23},{"ruleId":"248","severity":1,"message":"265","line":20,"column":11,"nodeType":"250","messageId":"251","endLine":20,"endColumn":20},{"ruleId":"248","severity":1,"message":"266","line":22,"column":11,"nodeType":"250","messageId":"251","endLine":22,"endColumn":22},{"ruleId":"248","severity":1,"message":"267","line":26,"column":11,"nodeType":"250","messageId":"251","endLine":26,"endColumn":28},{"ruleId":"248","severity":1,"message":"268","line":30,"column":14,"nodeType":"250","messageId":"251","endLine":30,"endColumn":29},{"ruleId":"257","severity":1,"message":"258","line":120,"column":41,"nodeType":"259","messageId":"260","endLine":120,"endColumn":43},{"ruleId":"248","severity":1,"message":"269","line":41,"column":12,"nodeType":"250","messageId":"251","endLine":41,"endColumn":26},{"ruleId":"248","severity":1,"message":"270","line":41,"column":28,"nodeType":"250","messageId":"251","endLine":41,"endColumn":38},{"ruleId":"248","severity":1,"message":"271","line":2,"column":10,"nodeType":"250","messageId":"251","endLine":2,"endColumn":20},{"ruleId":"248","severity":1,"message":"272","line":8,"column":8,"nodeType":"250","messageId":"251","endLine":8,"endColumn":11},{"ruleId":"248","severity":1,"message":"273","line":22,"column":7,"nodeType":"250","messageId":"251","endLine":22,"endColumn":13},{"ruleId":"248","severity":1,"message":"274","line":48,"column":10,"nodeType":"250","messageId":"251","endLine":48,"endColumn":13},{"ruleId":"248","severity":1,"message":"275","line":48,"column":15,"nodeType":"250","messageId":"251","endLine":48,"endColumn":21},{"ruleId":"248","severity":1,"message":"276","line":49,"column":10,"nodeType":"250","messageId":"251","endLine":49,"endColumn":13},{"ruleId":"248","severity":1,"message":"277","line":49,"column":15,"nodeType":"250","messageId":"251","endLine":49,"endColumn":21},{"ruleId":"257","severity":1,"message":"278","line":31,"column":21,"nodeType":"259","messageId":"260","endLine":31,"endColumn":23},{"ruleId":"257","severity":1,"message":"258","line":33,"column":117,"nodeType":"259","messageId":"260","endLine":33,"endColumn":119},{"ruleId":"257","severity":1,"message":"278","line":62,"column":26,"nodeType":"259","messageId":"260","endLine":62,"endColumn":28},{"ruleId":"257","severity":1,"message":"278","line":71,"column":26,"nodeType":"259","messageId":"260","endLine":71,"endColumn":28},{"ruleId":"257","severity":1,"message":"278","line":80,"column":26,"nodeType":"259","messageId":"260","endLine":80,"endColumn":28},{"ruleId":"257","severity":1,"message":"278","line":89,"column":26,"nodeType":"259","messageId":"260","endLine":89,"endColumn":28},{"ruleId":"248","severity":1,"message":"279","line":2,"column":10,"nodeType":"250","messageId":"251","endLine":2,"endColumn":16},{"ruleId":"248","severity":1,"message":"273","line":7,"column":7,"nodeType":"250","messageId":"251","endLine":7,"endColumn":13},{"ruleId":"248","severity":1,"message":"280","line":36,"column":12,"nodeType":"250","messageId":"251","endLine":36,"endColumn":22},{"ruleId":"248","severity":1,"message":"261","line":45,"column":12,"nodeType":"250","messageId":"251","endLine":45,"endColumn":20},{"ruleId":"248","severity":1,"message":"281","line":47,"column":12,"nodeType":"250","messageId":"251","endLine":47,"endColumn":24},{"ruleId":"248","severity":1,"message":"282","line":47,"column":26,"nodeType":"250","messageId":"251","endLine":47,"endColumn":41},{"ruleId":"248","severity":1,"message":"283","line":49,"column":12,"nodeType":"250","messageId":"251","endLine":49,"endColumn":20},{"ruleId":"248","severity":1,"message":"284","line":49,"column":22,"nodeType":"250","messageId":"251","endLine":49,"endColumn":33},{"ruleId":"248","severity":1,"message":"285","line":73,"column":11,"nodeType":"250","messageId":"251","endLine":73,"endColumn":27},{"ruleId":"286","severity":1,"message":"287","line":170,"column":10,"nodeType":"288","endLine":170,"endColumn":12,"suggestions":"289"},{"ruleId":"290","severity":1,"message":"291","line":262,"column":61,"nodeType":"292","endLine":262,"endColumn":112},{"ruleId":"248","severity":1,"message":"293","line":273,"column":25,"nodeType":"250","messageId":"251","endLine":273,"endColumn":31},{"ruleId":"290","severity":1,"message":"291","line":346,"column":61,"nodeType":"292","endLine":346,"endColumn":112},{"ruleId":"248","severity":1,"message":"280","line":34,"column":12,"nodeType":"250","messageId":"251","endLine":34,"endColumn":22},{"ruleId":"248","severity":1,"message":"294","line":42,"column":12,"nodeType":"250","messageId":"251","endLine":42,"endColumn":18},{"ruleId":"248","severity":1,"message":"261","line":43,"column":12,"nodeType":"250","messageId":"251","endLine":43,"endColumn":20},{"ruleId":"248","severity":1,"message":"281","line":45,"column":12,"nodeType":"250","messageId":"251","endLine":45,"endColumn":24},{"ruleId":"248","severity":1,"message":"282","line":45,"column":26,"nodeType":"250","messageId":"251","endLine":45,"endColumn":41},{"ruleId":"248","severity":1,"message":"283","line":47,"column":12,"nodeType":"250","messageId":"251","endLine":47,"endColumn":20},{"ruleId":"248","severity":1,"message":"284","line":47,"column":22,"nodeType":"250","messageId":"251","endLine":47,"endColumn":33},{"ruleId":"286","severity":1,"message":"287","line":167,"column":10,"nodeType":"288","endLine":167,"endColumn":12,"suggestions":"295"},{"ruleId":"290","severity":1,"message":"291","line":248,"column":61,"nodeType":"292","endLine":248,"endColumn":112},{"ruleId":"248","severity":1,"message":"293","line":259,"column":25,"nodeType":"250","messageId":"251","endLine":259,"endColumn":31},{"ruleId":"290","severity":1,"message":"291","line":323,"column":61,"nodeType":"292","endLine":323,"endColumn":112},{"ruleId":"248","severity":1,"message":"254","line":1,"column":27,"nodeType":"250","messageId":"251","endLine":1,"endColumn":36},{"ruleId":"248","severity":1,"message":"296","line":11,"column":7,"nodeType":"250","messageId":"251","endLine":11,"endColumn":14},{"ruleId":"248","severity":1,"message":"255","line":27,"column":9,"nodeType":"250","messageId":"251","endLine":27,"endColumn":16},{"ruleId":"257","severity":1,"message":"258","line":63,"column":23,"nodeType":"259","messageId":"260","endLine":63,"endColumn":25},{"ruleId":"248","severity":1,"message":"297","line":61,"column":9,"nodeType":"250","messageId":"251","endLine":61,"endColumn":23},{"ruleId":"248","severity":1,"message":"298","line":69,"column":9,"nodeType":"250","messageId":"251","endLine":69,"endColumn":17},{"ruleId":"257","severity":1,"message":"278","line":190,"column":35,"nodeType":"259","messageId":"260","endLine":190,"endColumn":37},{"ruleId":"286","severity":1,"message":"299","line":201,"column":6,"nodeType":"288","endLine":201,"endColumn":19,"suggestions":"300"},{"ruleId":"248","severity":1,"message":"280","line":34,"column":12,"nodeType":"250","messageId":"251","endLine":34,"endColumn":22},{"ruleId":"248","severity":1,"message":"294","line":42,"column":12,"nodeType":"250","messageId":"251","endLine":42,"endColumn":18},{"ruleId":"248","severity":1,"message":"261","line":43,"column":12,"nodeType":"250","messageId":"251","endLine":43,"endColumn":20},{"ruleId":"248","severity":1,"message":"281","line":45,"column":12,"nodeType":"250","messageId":"251","endLine":45,"endColumn":24},{"ruleId":"248","severity":1,"message":"282","line":45,"column":26,"nodeType":"250","messageId":"251","endLine":45,"endColumn":41},{"ruleId":"248","severity":1,"message":"283","line":47,"column":12,"nodeType":"250","messageId":"251","endLine":47,"endColumn":20},{"ruleId":"248","severity":1,"message":"284","line":47,"column":22,"nodeType":"250","messageId":"251","endLine":47,"endColumn":33},{"ruleId":"286","severity":1,"message":"287","line":167,"column":10,"nodeType":"288","endLine":167,"endColumn":12,"suggestions":"301"},{"ruleId":"290","severity":1,"message":"291","line":245,"column":61,"nodeType":"292","endLine":245,"endColumn":112},{"ruleId":"248","severity":1,"message":"293","line":256,"column":25,"nodeType":"250","messageId":"251","endLine":256,"endColumn":31},{"ruleId":"290","severity":1,"message":"291","line":320,"column":61,"nodeType":"292","endLine":320,"endColumn":112},{"ruleId":"248","severity":1,"message":"254","line":1,"column":26,"nodeType":"250","messageId":"251","endLine":1,"endColumn":35},{"ruleId":"248","severity":1,"message":"302","line":11,"column":20,"nodeType":"250","messageId":"251","endLine":11,"endColumn":27},{"ruleId":"303","severity":1,"message":"304","line":82,"column":9,"nodeType":"305","messageId":"306","endLine":118,"endColumn":10},{"ruleId":"303","severity":1,"message":"304","line":122,"column":9,"nodeType":"305","messageId":"306","endLine":138,"endColumn":10},{"ruleId":"257","severity":1,"message":"278","line":142,"column":97,"nodeType":"259","messageId":"260","endLine":142,"endColumn":99},{"ruleId":"257","severity":1,"message":"278","line":142,"column":126,"nodeType":"259","messageId":"260","endLine":142,"endColumn":128},{"ruleId":"290","severity":1,"message":"291","line":251,"column":64,"nodeType":"292","endLine":251,"endColumn":113},"no-native-reassign",["307"],"no-negated-in-lhs",["308"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'RestaurantContainer' is defined but never used.","'useEffect' is defined but never used.","'classes' is assigned a value but never used.","'useStyles' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'username' is assigned a value but never used.","'Box' is defined but never used.","'Button' is defined but never used.","'openConfirm' is assigned a value but never used.","'fullWidth' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleOpenConfirm' is assigned a value but never used.","'handleDeleteRev' is defined but never used.","'currentMessage' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'makeStyles' is defined but never used.","'Map' is defined but never used.","'google' is assigned a value but never used.","'lat' is assigned a value but never used.","'setLat' is assigned a value but never used.","'lng' is assigned a value but never used.","'setLng' is assigned a value but never used.","Expected '===' and instead saw '=='.","'render' is defined but never used.","'businessID' is assigned a value but never used.","'initfavorite' is assigned a value but never used.","'setInitFavorite' is assigned a value but never used.","'selected' is assigned a value but never used.","'setSelected' is assigned a value but never used.","'handleRateChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.business.id'. Either include it or remove the dependency array.","ArrayExpression",["309"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'marker' is assigned a value but never used.","'logged' is assigned a value but never used.",["310"],"'API_KEY' is assigned a value but never used.","'requestOptions' is assigned a value but never used.","'endpoint' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'bubbles'. Either include it or remove the dependency array.",["311"],["312"],"'useAuth' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"313","fix":"314"},{"desc":"313","fix":"315"},{"desc":"316","fix":"317"},{"desc":"313","fix":"318"},"Update the dependencies array to be: [props.business.id]",{"range":"319","text":"320"},{"range":"321","text":"320"},"Update the dependencies array to be: [botResponse, bubbles]",{"range":"322","text":"323"},{"range":"324","text":"320"},[4760,4762],"[props.business.id]",[4675,4677],[5799,5812],"[botResponse, bubbles]",[4665,4667]]