[{"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/index.js":"1","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/reportWebVitals.js":"2","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/App.js":"3","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/BigSearchBar/Search.js":"4","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Favorites/Favorites.js":"5","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Login/Login.js":"6","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Register/Register.js":"7","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/NavBar/NavBar.js":"8","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Profile/Profile.js":"9","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Home/Home.js":"10","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Favorites/FavoritesList.js":"11","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/services/authentication.js":"12","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/BigSearchBar/BigSearchBar.js":"13","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/RestaurantDetail/List.js":"14","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/services/yelp.js":"15","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/services/witai.js":"16","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/RestaurantDetail/map.js":"17","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/RestaurantDetail/Detail.js":"18","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Favorites/FavoritesDetail.js":"19","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/ChatBot/ChatBot.js":"20","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/Context.js":"21","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/Hooks/useLocation.js":"22","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Recommendations/Recs.js":"23","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/RestaurantContainer/RestaurantContainer.js":"24","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Chat/Chat.js":"25","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Recommendations/RecsList.js":"26","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/Hooks/useLoading.js":"27","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/Constants.js":"28","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Restaurant/index.js":"29","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Bubble/index.js":"30","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/ResizableTextarea/index.js":"31","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Recommendations/RecsDetail.js":"32","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/ResizableTextarea/ResizableTextarea.js":"33","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Bubble/Bubble.js":"34","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Restaurant/Restaurant.js":"35","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Profile/ReviewDetail.js":"36"},{"size":720,"mtime":1612380235233,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":1612380235233,"results":"39","hashOfConfig":"38"},{"size":2573,"mtime":1618958849150,"results":"40","hashOfConfig":"38"},{"size":1303,"mtime":1618963432475,"results":"41","hashOfConfig":"38"},{"size":1883,"mtime":1618963527391,"results":"42","hashOfConfig":"38"},{"size":2265,"mtime":1618958849166,"results":"43","hashOfConfig":"38"},{"size":1912,"mtime":1618958849170,"results":"44","hashOfConfig":"38"},{"size":5511,"mtime":1618958849167,"results":"45","hashOfConfig":"38"},{"size":5981,"mtime":1618962989083,"results":"46","hashOfConfig":"38"},{"size":10174,"mtime":1618963468256,"results":"47","hashOfConfig":"38"},{"size":466,"mtime":1618958849157,"results":"48","hashOfConfig":"38"},{"size":341,"mtime":1614573708212,"results":"49","hashOfConfig":"38"},{"size":4800,"mtime":1618963299167,"results":"50","hashOfConfig":"38"},{"size":398,"mtime":1616875263492,"results":"51","hashOfConfig":"38"},{"size":4061,"mtime":1618958849177,"results":"52","hashOfConfig":"38"},{"size":3707,"mtime":1618958849176,"results":"53","hashOfConfig":"38"},{"size":1214,"mtime":1618958849175,"results":"54","hashOfConfig":"38"},{"size":12972,"mtime":1618958849174,"results":"55","hashOfConfig":"38"},{"size":19796,"mtime":1618958849157,"results":"56","hashOfConfig":"38"},{"size":2009,"mtime":1617747584222,"results":"57","hashOfConfig":"38"},{"size":102,"mtime":1618958849151,"results":"58","hashOfConfig":"38"},{"size":423,"mtime":1618958849151,"results":"59","hashOfConfig":"38"},{"size":1912,"mtime":1618963155259,"results":"60","hashOfConfig":"38"},{"size":3240,"mtime":1618958849173,"results":"61","hashOfConfig":"38"},{"size":6838,"mtime":1618958849155,"results":"62","hashOfConfig":"38"},{"size":441,"mtime":1618958849169,"results":"63","hashOfConfig":"38"},{"size":294,"mtime":1618958849151,"results":"64","hashOfConfig":"38"},{"size":4084,"mtime":1618958849150,"results":"65","hashOfConfig":"38"},{"size":106,"mtime":1618958849172,"results":"66","hashOfConfig":"38"},{"size":54,"mtime":1618958849154,"results":"67","hashOfConfig":"38"},{"size":87,"mtime":1618958849171,"results":"68","hashOfConfig":"38"},{"size":19610,"mtime":1618958849169,"results":"69","hashOfConfig":"38"},{"size":2093,"mtime":1618958849171,"results":"70","hashOfConfig":"38"},{"size":1534,"mtime":1618958849154,"results":"71","hashOfConfig":"38"},{"size":4442,"mtime":1618958849171,"results":"72","hashOfConfig":"38"},{"size":9499,"mtime":1618963716883,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1xso5n3",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/index.js",[],["156","157"],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/reportWebVitals.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/App.js",["158","159","160"],"import React, { useState }from 'react'\nimport {BrowserRouter as Router, Route, Switch, NavLink, Link} from 'react-router-dom'\nimport { Home } from './components/Home/Home'\nimport { HomeNavBar } from './components/NavBar/NavBar'\nimport { Login } from './components/Login/Login'\nimport { Search } from './components/BigSearchBar/Search'\nimport { Register } from './components/Register/Register'\nimport { Chat } from './components/Chat/Chat'\nimport { RestaurantContainer } from './components/RestaurantContainer/RestaurantContainer'\nimport { Favorites } from './components/Favorites/Favorites'\nimport { Recs } from './components/Recommendations/Recs'\nimport { useLocation } from \"./Hooks/useLocation\";\nimport Context from \"./Context\";\nimport { Profile } from './components/Profile/Profile'\n// import {Transition, CSSTransition, TransitionGroup} from 'react-transition-group'\n// import { play, exit } from './timelines'\n// import { Container, Navbar, Nav } from 'react-bootstrap'\nexport const UsernameContext = React.createContext('');\n\n\nexport default function App() {\n  const [restaurants, setRestaurants] = useState([]);\n  const userLocation = useLocation();\n\n  return (\n    <Router>\n      <div className=\"full-container\">\n        <HomeNavBar />\n            <Route render={({location}) => (\n                <Switch location={location}>\n                <Route exact path=\"/\">\n                    <Home />\n                  </Route>\n                  <Route path=\"/favs\">\n                    <Favorites />\n                  </Route>\n                  <Route path=\"/search\">\n                    <Search />\n                  </Route>\n                  <Route path=\"/recs\">\n                    <Recs />\n                  </Route>\n                  <Route path=\"/profile\">\n                    <Profile />\n                  </Route>\n                  <Route path=\"/login\">\n                    <Login />\n                  </Route>\n                  <Route path=\"/register\">\n                    <Register/>\n                  </Route>\n                  <Route path =\"/ChatBot\">\n                    <Context.Provider value={{ userLocation, restaurants, setRestaurants }}>\n                      <div className=\"app\">\n                      <Chat />\n                      </div>\n                    </Context.Provider>\n                  </Route>\n                  <Route path=\"/businessid\">\n                  </Route>\n                </Switch>\n            )} \n            />\n      </div>\n    </Router>\n  );\n}\n\n\n// Turn App into class (state-based implementation?)\n\n// export default App;\n","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/BigSearchBar/Search.js",["161","162"],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Favorites/Favorites.js",["163","164"],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Login/Login.js",["165"],"import React, { useState, useEffect } from 'react'\nimport {Redirect} from 'react-router'\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport './Login.css'\nimport {login, useAuth} from \"../../services/authentication\"\nimport Container from \"@material-ui/core/Container\";\nimport Fade from 'react-reveal/Fade';\n\n\n\nexport function Login() {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  // const history = useHistory();\n  const [logged] = useAuth();\n\n  function validate(){\n    return username.length > 0 && password.length >= 0;\n  }\n\n  const onSubmitClick = (e)=>{\n    e.preventDefault()\n    console.log(\"You pressed login\")\n    let opts = {\n      'username': username,\n      'password': password\n    }\n    console.log(opts)\n    fetch('/api/login', {\n      method: 'post',\n      body: JSON.stringify(opts)\n    }).then(r => r.json())\n      .then(token => {\n        if (token.access_token){\n          login(token)\n          console.log(token)\n          localStorage.setItem('user', username)          \n        }\n        else {\n          console.log(\"Please type in correct username/password\")\n        }\n      })\n\n      \n  }\n\n  const handleUsernameChange = (e) => {\n    setUsername(e.target.value)\n  }\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value)\n  }\n\n  return (\n    \n    <Container style={{margin: '0', position: 'absolute', top: '30%', left: '40%', maxWidth: '500px'}}>\n      <Fade>\n      {!logged ? <div>\n      <h2>Login</h2>\n      <Form onSubmit={onSubmitClick}>\n          <Form.Group controlId=\"user\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control autoFocus type=\"text\" placeholder=\"Username\" value={username} onChange={handleUsernameChange} />\n          </Form.Group>\n          <Form.Group controlId=\"pass\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={handlePasswordChange} />\n          </Form.Group>\n          <Button type=\"submit\" style={{backgroundColor: 'orange'}} disabled={!validate()}>\n            Submit\n          </Button>\n      </Form>\n      </div>:\n      <Redirect to='/'/>}\n      </Fade>\n    </Container>\n    \n  )\n}","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Register/Register.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/NavBar/NavBar.js",["166","167"],"import React, { useState, useEffect } from 'react'\nimport { useHistory, Link } from \"react-router-dom\";\nimport {authFetch, useAuth, logout} from \"../../services/authentication\"\nimport './NavBar.css'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {Navbar, Nav, NavItem} from 'react-bootstrap';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  orange: {\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n}));\n\nexport function HomeNavBar() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [logged] = useAuth();\n  const [username, setUser] = useState(\"\");\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const onClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n\n    const handleClick = (e) => {\n      logout()\n      history.push('/login')\n      setAnchorEl(false)\n    }\n\n\n    useEffect(() => {\n      authFetch(\"/api/protected\").then(response => {\n        if (response.status === 401){\n          setUser(\"Sorry you aren't authorized!\")\n          return null\n        }\n        return response.json()\n      }).then(response => {\n        if (response && response.message){\n          setUser(response.message)\n        }\n      })\n    }, [])\n\n      return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" style={{width:'100%'}} className=\"topnav\">\n    <Navbar.Brand href=\"#home\" style={{fontSize: '30px'}}>FooDecisive</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n    <Nav className=\"mr-auto\">\n      <Nav.Link href=\"/\" style={{fontSize: '25px'}}>Home</Nav.Link>\n      <Nav.Link href=\"/search\" style={{fontSize: '25px'}}>Search</Nav.Link>\n      {logged ? <Nav.Link href=\"/recs\" style={{fontSize: '25px'}}>Recommendations</Nav.Link> : <div></div>}\n      {logged ? <Nav.Link href=\"/favs\" style={{fontSize: '25px'}}>Favorites</Nav.Link> : <div></div>}\n      {logged ? <Nav.Link href=\"/chatbot\" style={{fontSize: '25px'}}>Chatbot</Nav.Link> : <div></div>}\n    </Nav>\n    <Nav inline>\n    {!logged ? <Nav.Link href=\"/register\" style={{fontSize: '25px'}}>Register</Nav.Link> : <div></div>}\n    {!logged ? <Nav.Link href=\"/login\" style={{fontSize: '25px'}}>Login</Nav.Link> : <div></div>}\n    {logged ? <div id=\"log\" className={classes.root}>\n            <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={onClick}>\n             <Avatar>{String(localStorage.getItem('user'))[0]}</Avatar>\n             </Button>\n                <Menu\n                  id=\"simple-menu\"\n                  anchorEl={anchorEl}\n                  keepMounted\n                  open={Boolean(anchorEl)}\n                  onClose={handleClose}\n                >\n                  <MenuItem component={Link} to='/profile'>Profile</MenuItem>\n                  <MenuItem onClick={handleClose}>Settings</MenuItem>\n                  <MenuItem onClick={() => handleClick()}>Logout</MenuItem>\n                </Menu>\n            </div> : <div></div>}\n    </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n        // <nav className=\"topnav\">\n        //   <ul className=\"links\">\n        //     <li>\n        //       <Link className=\"link\" to=\"/\">Home</Link>\n        //     </li>\n        //     <li>\n        //       <Link className=\"link\" to=\"/search\">Search</Link>\n        //     </li>\n\n        //     {logged ?\n        //     <div className=\"topnav-logged\">\n        //     <li>\n        //       <Link className=\"link\" to=\"/recs\">Recommendations</Link>\n        //     </li>\n        //     <li>\n        //       <Link className=\"link\" to=\"/favs\">Favorites</Link>\n        //     </li>\n        //     <li><Link className=\"link\" to=\"/ChatBot\">ChatBot</Link></li>\n        //     <li>\n        //     <div id=\"log\" className={classes.root}>\n        //     <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={onClick}>\n        //      <Avatar>{String(localStorage.getItem('user'))[0]}</Avatar>\n        //      </Button>\n        //         <Menu\n        //           id=\"simple-menu\"\n        //           anchorEl={anchorEl}\n        //           keepMounted\n        //           open={Boolean(anchorEl)}\n        //           onClose={handleClose}\n        //         >\n        //           <MenuItem component={Link} to='/profile'>Profile</MenuItem>\n        //           <MenuItem onClick={handleClose}>Settings</MenuItem>\n        //           <MenuItem onClick={() => handleClick()}>Logout</MenuItem>\n        //         </Menu>\n        //     </div>\n        //       {/*<Link className=\"link\" id=\"log\" onClick={() => handleClick()}>Logout</Link> */}\n        //     </li>\n        //     </div> :\n        //     <div className=\"topnav-right\">\n        //     <li>\n        //       <Link className=\"link\" id=\"log\" to=\"/login\">Login</Link>\n        //     </li>\n        //     <li>\n        //       <Link className=\"link\" id=\"reg\" to=\"/register\">Register</Link>\n        //     </li>\n        //     </div>}\n        //   </ul>\n        // </nav>\n      );\n\n\n\n\n  }\n","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Profile/Profile.js",["168","169","170","171","172","173","174","175"],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Home/Home.js",["176","177"],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Favorites/FavoritesList.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/services/authentication.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/BigSearchBar/BigSearchBar.js",["178","179","180","181","182"],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/RestaurantDetail/List.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/services/yelp.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/services/witai.js",["183","184","185","186","187","188"],"import { yelpREST } from './yelp';\n\nrequire('dotenv').config()\nconst { REACT_APP_WIT_AI_API_KEY } = process.env;\nconst responses = require('../responses.json');\nconst gifs = require('../gif.json');\n\nconst API_KEY = REACT_APP_WIT_AI_API_KEY\n\nexport const witaiREST = {\n    chat(query, userLocation){\n      return fetch(`https://api.wit.ai/message?v=20210218&q=${query}`,{\n        headers: {\n          Authorization: `Bearer ${API_KEY}`\n        }\n      }).then(response=>response.json())\n      .then(response => {\n        if(response.intents.length > 0){\n          let intent = response.intents[0]['name']\n          let message = getMessage(intent)\n          let gif = getGif(intent)\n          let sortBy = 'best_match'\n          if(response.entities['sortBy:sortBy']){\n            sortBy = response.entities['sortBy:sortBy'][0]['value'].toLowerCase()\n            let sortByOptions = {\n                'best match': 'best_match',\n                'highest rated': 'rating',\n                'most reviewed': 'review_count'\n            }\n            sortBy = sortByOptions[sortBy]\n          }\n          if(intent == 'search'){\n            let query = response.entities['wit$search_query:search_query'][0]['value']\n            if(response.entities['wit$location:location'] && response.entities['wit$location:location'][0]['value'] != 'near me'){\n              let location = response.entities['wit$location:location'][0]['value']\n              return yelpREST.search(query,location,sortBy).then(response =>{\n                message = message.replace('#',location)\n                message = message.replace('%',query)\n                return{\n                  message:[{\n                    type:\"text\",\n                    content:message,\n                    gif:gif\n                  }],\n                  results:response\n                }\n              })\n            }\n            else{\n              let query = response.entities['wit$search_query:search_query'][0]['value']\n              return yelpREST.searchLatLon(query,userLocation.latitude,userLocation.longitude,sortBy).then(response =>{\n                message = \"Showing % near you.\"\n                message = message.replace('%',query)\n                return{\n                  message:[{\n                    type:\"text\",\n                    content:message,\n                    gif:gif\n                  }],\n                  results:response\n                }\n              })\n            }\n          }\n          else if(intent == \"example\"){\n            return{\n              message:[{\n                type:\"text\",\n                content:message,\n                gif:gif\n              }],\n              results: []\n            }\n          }\n          else if(intent == \"goodbye\"){\n            return{\n              message:[{\n                type:\"text\",\n                content:message,\n                gif:gif\n              }],\n              results: []\n            }\n          }\n          else if(intent == \"greeting\"){\n            return{\n              message:[{\n                type:\"text\",\n                content:message,\n                gif:gif\n              }],\n              results: []\n            }\n          }\n          else if(intent == \"thanks\"){\n            return{\n              message:[{\n                type:\"text\",\n                content:message,\n                gif:gif\n              }],\n              results: []\n            }\n          }\n        }\n      })\n    }\n};\n\nconst getMessage = (intent) =>{\n  return responses[intent][Math.floor(Math.random() * 3)]\n}\n\nconst getGif = (intent) =>{\n  if(intent !== \"example\"){\n    return gifs[intent][Math.floor(Math.random() * 3)]\n  }\n  else{\n    return gifs[intent][0]\n  }\n}\n","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/RestaurantDetail/map.js",["189","190"],"import React, { Component } from 'react';\nimport { render } from 'react-dom';\n\nrequire('dotenv').config()\nconst { REACT_APP_GOOGLE_MAPS_API_KEY } = process.env;\nconst API_KEY = REACT_APP_GOOGLE_MAPS_API_KEY\nconst google = window.google\n\nclass Map extends Component {\n    constructor(props) {\n        super(props);\n        this.onScriptLoad = this.onScriptLoad.bind(this)\n    }\n\n    onScriptLoad() {\n        const map = new window.google.maps.Map(\n            document.getElementById(this.props.id),\n            this.props.options);\n        this.props.onMapLoad(map)\n    }\n\n    componentDidMount() {\n        if (!window.google) {\n            var s = document.createElement('script');\n            s.type = 'text/javascript';\n            s.src = `https://maps.google.com/maps/api/js?key=${API_KEY}`;\n            var x = document.getElementsByTagName('script')[0];\n            x.parentNode.insertBefore(s, x);\n            s.addEventListener('load', e => {\n                this.onScriptLoad()\n            })\n        } else {\n            this.onScriptLoad()\n        }\n    }\n\n    render() {\n        return (\n            <div style={{ width: 550, height: 200 }} id={this.props.id} />\n        );\n    }\n}\n\nexport default Map","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/RestaurantDetail/Detail.js",["191","192","193","194","195","196","197","198","199","200","201","202"],"import React, {useState, useEffect} from 'react';\nimport './Detail.css';\nimport Card from '@material-ui/core/Card';\nimport { CardActionArea, DialogContent, Button } from '@material-ui/core';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Box from '@material-ui/core/Box';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport StarIcon from '@material-ui/icons/Star';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {authFetch, useAuth} from \"../../services/authentication\";\nimport Form from \"react-bootstrap/Form\";\nimport Map from './map'\nimport AddIcon from '@material-ui/icons/Add';\nimport Rating from '@material-ui/lab/Rating';\nimport Slide from 'react-reveal/Slide';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  text: {\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport function Detail(props) {\n    const [businessID, setBusinessID] = useState('')\n    const [review, setReview] = useState('')\n    const [rate, setRate] = useState('')\n\n    const [open, setOpen] = React.useState(false);\n    const [openRate, setOpenRate] = React.useState(false);\n    const fullWidth = true;\n\n    const [logged] = useAuth();\n    const [username, setUser] = useState(\"\");\n    const [favorite, setFavorite] = useState(false);\n    const [initfavorite, setInitFavorite] = useState(false);\n\n    const [selected, setSelected] = useState(false);\n\n    const classes = useStyles();\n\n    const handleOpen = (e) => {\n      setOpen(true);\n      console.log(props.business.id)\n      setBusinessID(props.business.id)\n    };\n\n    const handleClose = () => {\n      setOpen(false);\n      setOpenRate(false);\n    };\n\n    const handleRate = () => {\n      setOpen(false);\n      setOpenRate(true);\n    }\n\n    const handleReviewChange = (e) => {\n      setReview(e.target.value);\n    }\n\n    const handleRateChange = (e) => {\n      setRate(e.target.value);\n    }\n\n    function validate(){\n      return Number(rate) > 0 && review.length > 0 && review.length < 101;\n    }\n\n    useEffect(() => {\n      fetch(\"/test\").then(res => {\n          return res.json()\n      }).then(res => {\n          console.log(res)\n      })\n      authFetch(\"/api/protected\").then(response => {\n        if (response.status === 401){\n          setUser(\"Sorry you aren't authorized!\")\n          return null\n        }\n        return response.json()\n      }).then(response => {\n        if (response && response.message){\n          setUser(response.message)\n        }\n      })\n    }, [])\n\n    const onSubmitClick = (e) => {\n      e.preventDefault();\n      console.log(\"You pressed submit\");\n      console.log(`Rate: ${rate}`);\n      console.log(`Review: ${review}`);\n      setRate('');\n      setReview('');\n\n      console.log(\"You pressed login\")\n\n      let opts = {\n        'businessid': props.business.id,\n        'rating': rate,\n        'review': review\n      }\n      console.log(opts)\n\n      authFetch('/api/rate', {\n        method: 'post',\n        body: JSON.stringify(opts)\n      }).then(r => r.json())\n      .then(data => console.log(data))\n\n\n      handleClose();\n    }\n\n    const onFavoriteClick = (e) => {\n      e.preventDefault();\n      if (favorite === false) {\n        setFavorite(true)\n\n        let opts = {\n          'businessid': props.business.id,\n          'addFavorite': 'add'\n        }\n        console.log(opts);\n\n        authFetch('/api/favorites', {\n          method: 'post',\n          body: JSON.stringify(opts)\n        }).then(r => r.json())\n        .then(data => {\n          console.log(data)\n          console.log(\"Added to favorites!\")\n        });\n        // setFavorite(true)\n      }\n      else {\n        setFavorite(false)\n        let opts = {\n          'businessid': props.business.id,\n          'addFavorite': 'delete'\n        }\n        console.log(opts);\n        authFetch('/api/favorites', {\n          method: 'post',\n          body: JSON.stringify(opts)\n        }).then(r => r.json())\n        .then(data => setFavorite(data.favorite));\n        \n        console.log('Deleted from favorites');\n      }  \n    }\n\n    // Check whether card is already a favorite\n      useEffect(() => {\n      authFetch(`/api/favorites?business_id=${props.business.id}`)\n      .then(response => response.json())\n      .then(data => setFavorite(data.favorite));\n      }, [])\n\n\n      return (\n        <Slide bottom>\n        <div className='Business'>\n          <Card height='100px'>\n            <CardActionArea onClick={(e) => handleOpen(e)}>\n              <CardMedia\n                component='img'\n                height='140'\n                src={props.business.imageSrc}\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h2\" component=\"h2\">\n                  {props.business.name.slice(0, 17)}\n                </Typography>\n                <Typography gutterBottom variant=\"body2\" component=\"p\">\n                  {props.business.address}\n                </Typography>\n                <Typography gutterBottom variant=\"body2\" component=\"p\">\n                  {props.business.city}, {props.business.state} {props.business.zipCode}\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n              {logged ?\n              <div>\n                <CardActions>\n                <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={handleRate}>\n                  Rate\n                </Button>\n                {/* <IconButton onClick={onFavoriteClick}>\n                  <AddIcon style={{ color: '#fdd835' }} />\n                </IconButton> */}\n                {!favorite ? <IconButton onClick={onFavoriteClick}>\n                  <StarBorderIcon style={{ color: '#fdd835' }} />\n                </IconButton>\n                : <IconButton onClick={onFavoriteClick}>\n                <StarIcon style={{ color: '#fdd835' }} />\n                </IconButton>}\n                </CardActions>\n              </div>\n              : <div></div>}\n          </Card>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"business name\"\n            fullWidth={fullWidth}\n            className='custom-modal-style'\n          >\n            <DialogTitle id=\"simple-dialog-title\">\n            <Box display=\"flex\" alignItems=\"center\">\n                <Box flexGrow={1} >{props.business.name}</Box>\n                <Box>\n                {logged ? <div>\n                  <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={handleRate}>\n                    Rate\n                  </Button>\n                  {/* <IconButton onClick={onFavoriteClick}>\n                  <AddIcon style={{ color: '#fdd835' }} />\n                </IconButton> */}\n                  {!favorite ? <IconButton onClick={onFavoriteClick}>\n                    <StarBorderIcon style={{ color: '#fdd835' }} />\n                  </IconButton>\n                  : <IconButton onClick={onFavoriteClick}>\n                  <StarIcon style={{ color: '#fdd835' }} />\n                  </IconButton>}\n                  <IconButton onClick={handleClose}>\n                    <CloseIcon />\n                  </IconButton>\n                  </div> : \n                  <IconButton onClick={handleClose}>\n                    <CloseIcon />\n                  </IconButton>\n                }\n                </Box>\n            </Box>\n        </DialogTitle>\n        <DialogContent>\n          <div className={classes.root}>\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <Typography gutterBottom variant=\"body2\" component=\"p\" className={classes.text}>\n                  {props.business.address}, {props.business.city}, {props.business.state} {props.business.zipCode}\n                </Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <DialogContentText>\n                  Average rating: {props.business.rating}/5\n                  </DialogContentText>\n                 </Grid>\n                 <Grid item xs={6} justify-content='center'><img src={props.business.imageSrc} height='200px'/></Grid>\n                 <Grid item xs={12}>\n                 <Map\n                  id=\"myMap\"\n                  options={{\n                    center: { lat: parseFloat(props.business.latitude), lng: parseFloat(props.business.longitude) },\n                    zoom: 14\n                  }}\n                  onMapLoad={map => {\n                    var lat = parseFloat(props.business.latitude);\n                    var long = parseFloat(props.business.longitude);\n                    var marker = new window.google.maps.Marker({\n                      position: { lat: lat, lng: long },\n                      map: map,\n                      title: 'Restaurant here',\n                      setContent: 'Restaurant here'\n                    });\n                  }}\n                />\n                </Grid>\n                </Grid>\n              </div>\n            </DialogContent>\n          </Dialog>\n          <Dialog\n            open={openRate}\n            onClose={handleClose}\n            aria-labelledby=\"business name\"\n            fullWidth={fullWidth}\n            className='custom-modal-style'\n          >\n            <DialogTitle id=\"simple-dialog-title\">\n            <Box display=\"flex\" alignItems=\"center\">\n                <Box flexGrow={1} >{props.business.name}</Box>\n                <Box>\n                  <IconButton onClick={handleClose}>\n                    <CloseIcon />\n                  </IconButton>\n                </Box>\n            </Box>\n            </DialogTitle>\n            <DialogContent>\n              <div className={classes.root}>\n                <Grid container spacing={3}>\n                 <Grid item xs={12}>\n                  <Typography gutterBottom variant=\"body2\" component=\"p\" className={classes.text}>\n                    {props.business.address}, {props.business.city}, {props.business.state} {props.business.zipCode}\n                  </Typography>\n                 </Grid>\n                 <Grid item xs={6}>\n                  <DialogContent>\n                    <Form onSubmit={onSubmitClick}>\n                      {/* <Form.Group controlId=\"rate\">\n                        <Form.Label>Rate</Form.Label>\n                        {['radio'].map((type) =>(\n                          <div key={`inline-${type}`} className=\"mb-3\">\n                            <Form.Check inline value=\"1\" label=\"1\" type={type} name=\"radio\" id={`inline-${type}-1`} onChange={handleRateChange} />\n                            <Form.Check inline value=\"2\" label=\"2\" type={type} name=\"radio\" id={`inline-${type}-2`} onChange={handleRateChange} />\n                            <Form.Check inline value=\"3\" label=\"3\" type={type} name=\"radio\" id={`inline-${type}-3`} onChange={handleRateChange} />\n                            <Form.Check inline value=\"4\" label=\"4\" type={type} name=\"radio\" id={`inline-${type}-4`} onChange={handleRateChange} />\n                            <Form.Check inline value=\"5\" label=\"5\" type={type} name=\"radio\" id={`inline-${type}-5`} onChange={handleRateChange} />\n                          </div>\n                        ))}\n                      </Form.Group> */}\n                        <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n                          <Typography component=\"legend\">Rate</Typography>\n                          <Rating\n                            name=\"simple-controlled\"\n                            value={rate}\n                            onChange={(event, newValue) => {\n                              setRate(newValue);\n                            }}\n                          />\n                        </Box>\n                      <Form.Group controlId=\"review\">\n                        <Form.Label>Review</Form.Label>\n                        <Form.Control autoFocus type=\"text\" placeholder=\"Review (100 characters)\" value={review} onChange={handleReviewChange} />\n                      </Form.Group>\n                      <Button type=\"submit\" disabled={!validate()}>\n                        Submit\n                      </Button>\n                    </Form>\n                  </DialogContent>\n                 </Grid>\n                 <Grid item xs={6} justify-content='center'><img src={props.business.imageSrc} height='200px'/></Grid>\n                </Grid>\n              </div>\n            </DialogContent>\n          </Dialog>\n        </div>\n        </Slide>\n      );\n  }\n      \n","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Favorites/FavoritesDetail.js",["203","204","205","206","207","208","209","210","211","212","213","214"],"import React, {useState, useEffect} from 'react';\nimport './FavoritesDetail.css';\nimport Card from '@material-ui/core/Card';\nimport { CardActionArea, DialogContent, Button } from '@material-ui/core';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Box from '@material-ui/core/Box';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport StarIcon from '@material-ui/icons/Star';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {authFetch, useAuth} from \"../../services/authentication\";\nimport Form from \"react-bootstrap/Form\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Map from '../RestaurantDetail/map'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  text: {\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport function FavoritesDetail(props) {\n    const [businessID, setBusinessID] = useState('')\n    const [review, setReview] = useState('')\n    const [rate, setRate] = useState('')\n\n    const [open, setOpen] = React.useState(false);\n    const [openRate, setOpenRate] = React.useState(false);\n    const fullWidth = true;\n\n    const [logged] = useAuth();\n    const [username, setUser] = useState(\"\");\n    const [favorite, setFavorite] = useState(false);\n    const [initfavorite, setInitFavorite] = useState(false);\n\n    const [selected, setSelected] = useState(false);\n\n    const classes = useStyles();\n\n    const handleOpen = (e) => {\n      setOpen(true);\n      console.log(props.business.id)\n      setBusinessID(props.business.id)\n    };\n\n    const handleClose = () => {\n      setOpen(false);\n      setOpenRate(false);\n    };\n\n    const handleRate = () => {\n      setOpen(false);\n      setOpenRate(true);\n    }\n\n    const handleReviewChange = (e) => {\n      setReview(e.target.value);\n    }\n\n    const handleRateChange = (e) => {\n      setRate(e.target.value);\n    }\n\n    function validate(){\n      return rate.length > 0 && review.length > 0 && review.length < 101;\n    }\n\n    useEffect(() => {\n      fetch(\"/test\").then(res => {\n          return res.json()\n      }).then(res => {\n          console.log(res)\n      })\n      authFetch(\"/api/protected\").then(response => {\n        if (response.status === 401){\n          setUser(\"Sorry you aren't authorized!\")\n          return null\n        }\n        return response.json()\n      }).then(response => {\n        if (response && response.message){\n          setUser(response.message)\n        }\n      })\n    }, [])\n\n    const onSubmitClick = (e) => {\n      e.preventDefault();\n      console.log(\"You pressed submit\");\n      console.log(`Rate: ${rate}`);\n      console.log(`Review: ${review}`);\n      setRate('');\n      setReview('');\n\n      console.log(\"You pressed login\")\n\n      let opts = {\n        'businessid': props.business.id,\n        'rating': rate,\n        'review': review\n      }\n      console.log(opts)\n\n      authFetch('/api/rate', {\n        method: 'post',\n        body: JSON.stringify(opts)\n      }).then(r => r.json())\n      .then(data => console.log(data))\n\n\n      handleClose();\n    }\n\n    const onFavoriteClick = (e) => {\n      e.preventDefault();\n      if (favorite === false) {\n        setFavorite(true)\n\n        let opts = {\n          'businessid': props.business.id,\n          'addFavorite': 'add'\n        }\n        console.log(opts);\n\n        authFetch('/api/favorites', {\n          method: 'post',\n          body: JSON.stringify(opts)\n        }).then(r => r.json())\n        .then(data => {\n          // setFavorite(data.favorite)\n          console.log(\"Added to favorites!\")\n        });\n      }\n      else {\n        setFavorite(false)\n        let opts = {\n          'businessid': props.business.id,\n          'addFavorite': 'delete'\n        }\n        console.log(opts);\n        authFetch('/api/favorites', {\n          method: 'post',\n          body: JSON.stringify(opts)\n        }).then(r => r.json())\n        \n        console.log('Deleted from favorites');\n        window.location.reload();\n      }  \n    }\n\n    // Check whether card is already a favorite\n      useEffect(() => {\n      authFetch(`/api/favorites?business_id=${props.business.id}`)\n      .then(response => response.json())\n      .then(data => setFavorite(data.favorite));\n      }, [])\n\n\n      return (\n        <div className='Business'>\n          <Card height='100px'>\n            <CardActionArea onClick={(e) => handleOpen(e)}>\n              <CardMedia\n                component='img'\n                height='140'\n                src={props.business.imageSrc}\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h2\" component=\"h2\" style={{paddingBottom: '10px'}}>\n                  {props.business.name.slice(0, 22)}\n                </Typography>\n                <Typography gutterBottom variant=\"body2\" component=\"p\">\n                  {props.business.address}\n                </Typography>\n                <Typography gutterBottom variant=\"body2\" component=\"p\">\n                  {props.business.city}, {props.business.state} {props.business.zipCode}\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n                <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={handleRate}>\n                  Rate\n                </Button>\n                {!favorite ? <IconButton onClick={onFavoriteClick}>\n                  <StarBorderIcon style={{ color: '#fdd835' }} />\n                </IconButton>\n                : <IconButton onClick={onFavoriteClick}>\n                <StarIcon style={{ color: '#fdd835' }} />\n                </IconButton>}\n            </CardActions>\n          </Card>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"business name\"\n            fullWidth={fullWidth}\n            className='custom-modal-style'\n          >\n            <DialogTitle id=\"simple-dialog-title\">\n            <Box display=\"flex\" alignItems=\"center\">\n                <Box flexGrow={1} >{props.business.name}</Box>\n                <Box>\n                  <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={handleRate}>\n                    Rate\n                  </Button>\n                  {!favorite ? <IconButton onClick={onFavoriteClick}>\n                    <StarBorderIcon style={{ color: '#fdd835' }} />\n                  </IconButton>\n                  : <IconButton onClick={onFavoriteClick}>\n                  <StarIcon style={{ color: '#fdd835' }} />\n                  </IconButton>}\n                  <IconButton onClick={handleClose}>\n                    <CloseIcon />\n                  </IconButton>\n                </Box>\n            </Box>\n            </DialogTitle>\n            <DialogContent>\n              <div className={classes.root}>\n                <Grid container spacing={3}>\n                 <Grid item xs={12}>\n                  <Typography gutterBottom variant=\"body2\" component=\"p\" className={classes.text}>\n                    {props.business.address}, {props.business.city}, {props.business.state} {props.business.zipCode}\n                  </Typography>\n                 </Grid>\n                 <Grid item xs={6}>\n                  <DialogContentText>\n                    Average rating: {props.business.rating}/5\n                  </DialogContentText>\n                  <DialogContentText>\n                    Genre: {props.business.category} \n                  </DialogContentText>\n                  <DialogContentText>\n                  Number of ratings: {props.business.reviewCount}\n                  </DialogContentText>\n                 </Grid>\n                 <Grid item xs={6} justify-content='center'><img src={props.business.imageSrc} height='200px'/></Grid>\n                 <Grid item xs={12}>\n                 <Map\n                  id=\"myMap\"\n                  options={{\n                    center: { lat: parseFloat(props.business.latitude), lng: parseFloat(props.business.longitude) },\n                    zoom: 14\n                  }}\n                  onMapLoad={map => {\n                    var lat = parseFloat(props.business.latitude);\n                    var long = parseFloat(props.business.longitude);\n                    var marker = new window.google.maps.Marker({\n                      position: { lat: lat, lng: long },\n                      map: map,\n                      title: 'Restaurant here',\n                      setContent: 'Restaurant here'\n                    });\n                  }}\n                />\n\n                 </Grid>\n                </Grid>\n              </div>\n            </DialogContent>\n          </Dialog>\n          <Dialog\n            open={openRate}\n            onClose={handleClose}\n            aria-labelledby=\"business name\"\n            fullWidth={fullWidth}\n            className='custom-modal-style'\n          >\n            <DialogTitle id=\"simple-dialog-title\">\n            <Box display=\"flex\" alignItems=\"center\">\n                <Box flexGrow={1} >{props.business.name}</Box>\n                <Box>\n                  <IconButton onClick={handleClose}>\n                    <CloseIcon />\n                  </IconButton>\n                </Box>\n            </Box>\n            </DialogTitle>\n            <DialogContent>\n              <div className={classes.root}>\n                <Grid container spacing={3}>\n                 <Grid item xs={12}>\n                  <Typography gutterBottom variant=\"body2\" component=\"p\" className={classes.text}>\n                    {props.business.address}, {props.business.city}, {props.business.state} {props.business.zipCode}\n                  </Typography>\n                 </Grid>\n                 <Grid item xs={6}>\n                  <DialogContent>\n                    <Form onSubmit={onSubmitClick}>\n                      <Form.Group controlId=\"rate\">\n                        <Form.Label>Rate</Form.Label>\n                        {['radio'].map((type) =>(\n                          <div key={`inline-${type}`} className=\"mb-3\">\n                            <Form.Check inline value=\"1\" label=\"1\" type={type} name=\"radio\" id={`inline-${type}-1`} onChange={handleRateChange} />\n                            <Form.Check inline value=\"2\" label=\"2\" type={type} name=\"radio\" id={`inline-${type}-2`} onChange={handleRateChange} />\n                            <Form.Check inline value=\"3\" label=\"3\" type={type} name=\"radio\" id={`inline-${type}-3`} onChange={handleRateChange} />\n                            <Form.Check inline value=\"4\" label=\"4\" type={type} name=\"radio\" id={`inline-${type}-4`} onChange={handleRateChange} />\n                            <Form.Check inline value=\"5\" label=\"5\" type={type} name=\"radio\" id={`inline-${type}-5`} onChange={handleRateChange} />\n                          </div>\n                        ))}\n                      </Form.Group>\n                      <Form.Group controlId=\"review\">\n                        <Form.Label>Review</Form.Label>\n                        <Form.Control autoFocus type=\"text\" placeholder=\"Review (100 characters)\" value={review} onChange={handleReviewChange} />\n                      </Form.Group>\n                      <Button type=\"submit\" disabled={!validate()}>\n                        Submit\n                      </Button>\n                    </Form>\n                  </DialogContent>\n                 </Grid>\n                 <Grid item xs={6} justify-content='center'><img src={props.business.imageSrc} height='200px'/></Grid>\n                </Grid>\n              </div>\n            </DialogContent>\n          </Dialog>\n        </div>\n      );\n  }\n      \n\n    // return (\n    //     <div className='Business'>\n    //       <Card height='100px'>\n    //         <CardActionArea onClick={(e) => handleOpen(e)}>\n    //           <CardMedia\n    //             component='img'\n    //             height='140'\n    //             src={props.business.imageSrc}\n    //           />\n    //           <CardContent>\n    //             <Typography gutterBottom variant=\"h2\" component=\"h2\">\n    //               {props.business.name}\n    //             </Typography>\n    //             <Typography gutterBottom variant=\"body2\" component=\"p\">\n    //               {props.business.address}\n    //             </Typography>\n    //             <Typography gutterBottom variant=\"body2\" component=\"p\">\n    //               {props.business.city}, {props.business.state} {props.business.zipCode}\n    //             </Typography>\n    //           </CardContent>\n    //         </CardActionArea>\n    //           {logged ?\n    //           <div>\n    //             <CardActions>\n    //             <Button size=\"small\" color=\"secondary\" onClick={handleRate}>\n    //               Rate\n    //             </Button>\n    //             {!favorite ? <Button size=\"small\" color='primary' onClick={handleFavorite}>\n    //               Add Favorite\n    //             </Button>\n    //             : <Button size=\"small\" color='primary' variant='outlined' onClick={handleFavorite}\n    //             >Favorite\n    //             </Button>}\n    //             </CardActions>\n    //           </div>\n    //           : <div></div>}\n    //       </Card>\n    //       <Dialog\n    //         open={open}\n    //         onClose={handleClose}\n    //         aria-labelledby=\"business name\"\n    //         fullWidth={fullWidth}\n    //         className='custom-modal-style'\n    //       >\n    //         <DialogTitle id=\"simple-dialog-title\">\n    //         <Box display=\"flex\" alignItems=\"center\">\n    //             <Box flexGrow={1} >{props.business.name}</Box>\n    //             <Box>\n    //             {logged ? <div>\n    //               <Button size=\"small\" color=\"primary\" onClick={handleRate}>\n    //                 Rate\n    //               </Button>\n    //               <IconButton>\n    //                 <StarOutlineIcon />\n    //               </IconButton>\n    //               <IconButton onClick={handleClose}>\n    //                 <CloseIcon />\n    //               </IconButton>\n    //               </div> : \n    //               <IconButton onClick={handleClose}>\n    //                 <CloseIcon />\n    //               </IconButton>\n    //             }\n    //             </Box>\n    //         </Box>\n    //         </DialogTitle>\n    //         <DialogContent>\n    //           <div className={classes.root}>\n    //             <Grid container spacing={3}>\n    //              <Grid item xs={12}>\n    //               <Typography gutterBottom variant=\"body2\" component=\"p\" className={classes.text}>\n    //                 {props.business.address}, {props.business.city}, {props.business.state} {props.business.zipCode}\n    //               </Typography>\n    //              </Grid>\n    //              <Grid item xs={6}>\n    //               <DialogContentText>\n    //                 Average rating: {props.business.rating}/5\n    //               </DialogContentText>\n    //               <DialogContentText>\n    //                 Genre: {props.business.category}\n    //               </DialogContentText>\n    //              </Grid>\n    //              <Grid item xs={6} justify-content='center'><img src={props.business.imageSrc} height='200px'/></Grid>\n    //              <Grid item xs={12}>(Google Maps API goes here)</Grid>\n    //             </Grid>\n    //           </div>\n    //         </DialogContent>\n    //       </Dialog>\n    //       <Dialog\n    //         open={openRate}\n    //         onClose={handleClose}\n    //         aria-labelledby=\"business name\"\n    //         fullWidth={fullWidth}\n    //         className='custom-modal-style'\n    //       >\n    //         <DialogTitle id=\"simple-dialog-title\">\n    //         <Box display=\"flex\" alignItems=\"center\">\n    //             <Box flexGrow={1} >{props.business.name}</Box>\n    //             <Box>\n    //               <IconButton onClick={handleClose}>\n    //                 <CloseIcon />\n    //               </IconButton>\n    //             </Box>\n    //         </Box>\n    //         </DialogTitle>\n    //         <DialogContent>\n    //           <div className={classes.root}>\n    //             <Grid container spacing={3}>\n    //              <Grid item xs={12}>\n    //               <Typography gutterBottom variant=\"body2\" component=\"p\" className={classes.text}>\n    //                 {props.business.address}, {props.business.city}, {props.business.state} {props.business.zipCode}\n    //               </Typography>\n    //              </Grid>\n    //              <Grid item xs={6}>\n    //               <DialogContent>\n    //                 <Form onSubmit={onSubmitClick}>\n    //                   <Form.Group controlId=\"rate\">\n    //                     <Form.Label>Rate</Form.Label>\n    //                     {['radio'].map((type) =>(\n    //                       <div key={`inline-${type}`} className=\"mb-3\">\n    //                         <Form.Check inline value=\"1\" label=\"1\" type={type} name=\"radio\" id={`inline-${type}-1`} onChange={handleRateChange} />\n    //                         <Form.Check inline value=\"2\" label=\"2\" type={type} name=\"radio\" id={`inline-${type}-2`} onChange={handleRateChange} />\n    //                         <Form.Check inline value=\"3\" label=\"3\" type={type} name=\"radio\" id={`inline-${type}-3`} onChange={handleRateChange} />\n    //                         <Form.Check inline value=\"4\" label=\"4\" type={type} name=\"radio\" id={`inline-${type}-4`} onChange={handleRateChange} />\n    //                         <Form.Check inline value=\"5\" label=\"5\" type={type} name=\"radio\" id={`inline-${type}-5`} onChange={handleRateChange} />\n    //                       </div>\n    //                     ))}\n    //                   </Form.Group>\n    //                   <Form.Group controlId=\"review\">\n    //                     <Form.Label>Review</Form.Label>\n    //                     <Form.Control autoFocus type=\"text\" placeholder=\"Review (100 characters)\" value={review} onChange={handleReviewChange} />\n    //                   </Form.Group>\n    //                   <Button type=\"submit\" disabled={!validate()}>\n    //                     Submit\n    //                   </Button>\n    //                 </Form>\n    //               </DialogContent>\n    //              </Grid>\n    //              <Grid item xs={6} justify-content='center'><img src={props.business.imageSrc} height='200px'/></Grid>\n    //             </Grid>\n    //           </div>\n    //         </DialogContent>\n    //       </Dialog>\n    //     </div>\n        // <div className=\"Business\">\n        //   <div className=\"image-container\">\n        //     <img src={props.business.imageSrc} alt=''/>\n        //   </div>\n        //   <h2>{props.business.name}</h2>\n        //   <div className=\"Business-information\">\n        //     <div className=\"Business-address\">\n        //       <p>{props.business.address}</p>\n        //       <p>{props.business.city}</p>\n        //       <p>{props.business.state} {props.business.zipCode}</p>\n        //     </div>\n        //     <div className=\"Business-reviews\">\n        //       <h3>{props.business.category.toUpperCase()}</h3>\n        //       <h3 className=\"rating\">{props.business.rating} stars</h3>\n        //       <p>{props.business.reviewCount} reviews</p>\n        //     </div>\n        //   </div>\n        // </div>\n        // );\n","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/ChatBot/ChatBot.js",["215","216"],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/Context.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/Hooks/useLocation.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Recommendations/Recs.js",["217","218"],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/RestaurantContainer/RestaurantContainer.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Chat/Chat.js",["219","220","221","222","223","224"],"import React, {\n  useEffect,\n  useContext,\n  useReducer,\n  useCallback,\n  memo,\n  useRef,\n  useState\n} from \"react\";\nimport \"./Chat.css\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IoMdSend } from \"react-icons/io\";\nimport ResizableTextarea from \"../ResizableTextarea\";\nimport Bubble from \"../Bubble\";\nimport { witaiREST } from '../../services/witai';\nimport { List } from '../RestaurantDetail/List';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Fade from 'react-reveal/Fade';\n\n\nimport logo from \"../../assets/logo.png\";\nimport {\n  BOT,\n  USER,\n  THINKING,\n  INIT_BUBBLES,\n  ERROR_BUBBLES\n} from \"../../Constants\";\nimport Context from \"../../Context\";\n\nconst ICON_COLOR = \"Orange\";\nconst NO_LOCATION_MESSAGE =\n  \"Oh, I can't access your location. 📍 Please allow me to access it so I can help you.\";\nconst ICON_SIZE = 32;\n\n// reducer and init state for the Chat component\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_BUBBLES\":\n      return { ...state, bubbles: action.payload };\n    case \"SET_SHOULD_SEND\":\n      return { ...state, shouldSend: action.payload };\n    case \"SET_BOT_RESPONSE\":\n      return { ...state, botResponse: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst initialState = {\n  bubbles: INIT_BUBBLES,\n  shouldSend: false,\n  botResponse: null\n};\n\n// helper functions\nconst filteredThinking = bubbles => [\n  ...bubbles.filter(b => b.type !== THINKING)\n];\n\nconst callApi = (input, userLocation) => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      message: input,\n      user: { coordinates: userLocation }\n    })\n  };\n  const endpoint = process.env.REACT_APP_API_ENDPOINT;\n  return witaiREST.chat(encodeURIComponent(input.trim()),userLocation).then(response =>{\n    return response;\n  })\n};\n\n// memoizing the two presentational components\nconst Header = memo(() => (\n  <div className=\"header-chat\">\n    {/* <img src={logo} alt=\"Loa\" className=\"header-logo\" /> */}\n    <i class='fas fa-hamburger' style={{fontSize:'48px', paddingRight:'30px', color:'orange'}}></i>\n    <p className=\"header-chat-text\">Jessie</p>\n  </div>\n));\n\nconst BubbleContainer = memo(({ bubbles }) => (\n  <div className=\"bubbles-container\">\n    {bubbles.map((b, i) => (\n      <Bubble key={i} {...b} />\n    ))}\n  </div>\n));\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 1100,\n    height: '100% !important',\n  },\n}));\n\n\nexport const Chat = () => {\n  const [results, setResults] = useState([])\n  const [{ bubbles, shouldSend, botResponse }, dispatch] = useReducer(\n    reducer,\n    initialState\n  );\n  // this ref will contain the message from the user\n  const messageRef = useRef(\"\");\n  // get location and restaurants setter from Context\n  const { userLocation, setRestaurants } = useContext(Context);\n\n  const handleSend = () => {\n    dispatch({\n      type: \"SET_BUBBLES\",\n      payload: [\n        { type: THINKING, content: null, bubbleType: \"text\" },\n        {\n          type: USER,\n          content: messageRef.current,\n          bubbleType: \"text\"\n        },\n        ...filteredThinking(bubbles)\n      ]\n    });\n    dispatch({ type: \"SET_SHOULD_SEND\", payload: false });\n  };\n\n  // wrapped in useCallback to not change on every render as a useEffect dependency (see below)\n  const handleSendMemo = useCallback(handleSend, [bubbles, dispatch]);\n\n  useEffect(() => {\n    if (shouldSend) handleSendMemo();\n  }, [shouldSend, handleSendMemo]);\n\n  const fetchRestaurantsMemo = useCallback(() => {\n    const inputValue = messageRef.current;\n    if (inputValue && inputValue !== \"\") {\n      if (userLocation !== null) {\n        const input = inputValue.substr(0, inputValue.length - 1); // Remove '\\n' caracter at the end\n        // fetch restaurants\n        callApi(input, userLocation)\n          .then(response => response)\n          .then(data => {\n            const resultsNew = data.results !== null ? data.results : [];\n            dispatch({ type: \"SET_BOT_RESPONSE\", payload: data.message })\n            setResults(resultsNew);\n          })\n          .catch(e => {\n            console.log(e);\n            dispatch({ type: \"SET_BOT_RESPONSE\", payload: ERROR_BUBBLES });\n            setRestaurants([]);\n          });\n      } else {\n        dispatch({\n          type: \"SET_BOT_RESPONSE\",\n          payload: [{ type: \"text\", content: NO_LOCATION_MESSAGE }]\n        });\n      }\n    }\n  }, [userLocation, dispatch, setRestaurants, messageRef]);\n\n  useEffect(() => {\n    if (bubbles.length > 1) {\n      const { type } = bubbles[0];\n      // user has sent last message, we stop thinking the previous ones ane push thinking to last (fetch restaurants)\n      if (type === THINKING) fetchRestaurantsMemo();\n    }\n  }, [bubbles, fetchRestaurantsMemo]);\n\n  // we received bots responses, and reset the bubbles\n  useEffect(() => {\n    if (botResponse !== null) {\n      let newBubbles = botResponse.map(b => ({\n        type: BOT,\n        bubbleType: b.type,\n        content: b.content,\n        gif: b.gif\n      }));\n      newBubbles.push(...filteredThinking(bubbles));\n      dispatch({ type: \"SET_BUBBLES\", payload: newBubbles });\n      if(newBubbles[0].bubbleType == \"text\"){\n        dispatch({ type: \"SET_BOT_RESPONSE\", payload: [{\n          type: \"gif\",\n          content:newBubbles[0].gif,\n          gif:[]\n        }]})\n      }\n      else{\n        dispatch({ type: \"SET_BOT_RESPONSE\", payload: null });\n      }\n    }\n  }, [botResponse]);\n\n  // wrapped in callbakc because passed to ResizableTextarea, and shouldn't change on every render\n  const setShouldSendMemo = useCallback(\n    payload => dispatch({ type: \"SET_SHOULD_SEND\", payload }),\n    [dispatch]\n  );\n\n  const renderInput = () => (\n    <div className=\"chat-input-container\">\n      <ResizableTextarea\n        className=\"chat-input\"\n        placeholder=\"Send a message...\"\n        messageRef={messageRef}\n        setShouldSend={setShouldSendMemo}\n      />\n      <IoMdSend\n        className=\"send-logo\"\n        onClick={() => handleSend()}\n        color={ICON_COLOR}\n        size={ICON_SIZE}\n      />\n    </div>\n  );\n\n\n  const classes = useStyles();\n  return (\n    <Fade>\n    <div className=\"container\">\n      <div className=\"chat-container\">\n        <Header />\n        <BubbleContainer bubbles={bubbles} />\n        {renderInput()}\n      </div>\n      <div className=\"list-container\">\n      <GridList cellHeight={160} className={classes.gridList} cols={3}>\n        <List businesses={results} />\n      </GridList>\n      </div>\n    </div>\n    </Fade>\n  );\n};\n\nexport default Chat;\n","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Recommendations/RecsList.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/Hooks/useLoading.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/Constants.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Restaurant/index.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Bubble/index.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/ResizableTextarea/index.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Recommendations/RecsDetail.js",["225","226","227","228","229","230","231","232","233","234","235","236"],"import React, {useState, useEffect} from 'react';\nimport './RecsDetail.css';\nimport Card from '@material-ui/core/Card';\nimport { CardActionArea, DialogContent, Button } from '@material-ui/core';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Box from '@material-ui/core/Box';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport StarIcon from '@material-ui/icons/Star';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {authFetch, useAuth} from \"../../services/authentication\";\nimport Form from \"react-bootstrap/Form\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Map from '../RestaurantDetail/map'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  text: {\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport function RecsDetail(props) {\n    const [businessID, setBusinessID] = useState('')\n    const [review, setReview] = useState('')\n    const [rate, setRate] = useState('')\n\n    const [open, setOpen] = React.useState(false);\n    const [openRate, setOpenRate] = React.useState(false);\n    const fullWidth = true;\n\n    const [logged] = useAuth();\n    const [username, setUser] = useState(\"\");\n    const [favorite, setFavorite] = useState(false);\n    const [initfavorite, setInitFavorite] = useState(false);\n\n    const [selected, setSelected] = useState(false);\n\n    const classes = useStyles();\n\n    const handleOpen = (e) => {\n      setOpen(true);\n      console.log(props.business.id)\n      setBusinessID(props.business.id)\n    };\n\n    const handleClose = () => {\n      setOpen(false);\n      setOpenRate(false);\n    };\n\n    const handleRate = () => {\n      setOpen(false);\n      setOpenRate(true);\n    }\n\n    const handleReviewChange = (e) => {\n      setReview(e.target.value);\n    }\n\n    const handleRateChange = (e) => {\n      setRate(e.target.value);\n    }\n\n    function validate(){\n      return rate.length > 0 && review.length > 0 && review.length < 101;\n    }\n\n    useEffect(() => {\n      fetch(\"/test\").then(res => {\n          return res.json()\n      }).then(res => {\n          console.log(res)\n      })\n      authFetch(\"/api/protected\").then(response => {\n        if (response.status === 401){\n          setUser(\"Sorry you aren't authorized!\")\n          return null\n        }\n        return response.json()\n      }).then(response => {\n        if (response && response.message){\n          setUser(response.message)\n        }\n      })\n    }, [])\n\n    const onSubmitClick = (e) => {\n      e.preventDefault();\n      console.log(\"You pressed submit\");\n      console.log(`Rate: ${rate}`);\n      console.log(`Review: ${review}`);\n      setRate('');\n      setReview('');\n\n      console.log(\"You pressed login\")\n\n      let opts = {\n        'businessid': props.business.id,\n        'rating': rate,\n        'review': review\n      }\n      console.log(opts)\n\n      authFetch('/api/rate', {\n        method: 'post',\n        body: JSON.stringify(opts)\n      }).then(r => r.json())\n      .then(data => console.log(data))\n\n\n      handleClose();\n    }\n\n    const onFavoriteClick = (e) => {\n      e.preventDefault();\n      if (favorite === false) {\n        setFavorite(true)\n\n        let opts = {\n          'businessid': props.business.id,\n          'addFavorite': 'add'\n        }\n        console.log(opts);\n\n        authFetch('/api/favorites', {\n          method: 'post',\n          body: JSON.stringify(opts)\n        }).then(r => r.json())\n        .then(data => {\n          // setFavorite(data.favorite)\n          console.log(\"Added to favorites!\")\n        });\n      }\n      else {\n        setFavorite(false)\n        let opts = {\n          'businessid': props.business.id,\n          'addFavorite': 'delete'\n        }\n        console.log(opts);\n        authFetch('/api/favorites', {\n          method: 'post',\n          body: JSON.stringify(opts)\n        }).then(r => r.json())\n        \n        console.log('Deleted from favorites');\n        window.location.reload();\n      }  \n    }\n\n    // Check whether card is already a favorite\n      useEffect(() => {\n      authFetch(`/api/favorites?business_id=${props.business.id}`)\n      .then(response => response.json())\n      .then(data => setFavorite(data.favorite));\n      }, [])\n\n\n      return (\n        <div className='Business'>\n          <Card height='100px'>\n            <CardActionArea onClick={(e) => handleOpen(e)}>\n              <CardMedia\n                component='img'\n                height='140'\n                src={props.business.imageSrc}\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h2\" component=\"h2\">\n                  {props.business.name.slice(0, 22)}\n                </Typography>\n                <Typography gutterBottom variant=\"body2\" component=\"p\">\n                  {props.business.address}\n                </Typography>\n                <Typography gutterBottom variant=\"body2\" component=\"p\">\n                  {props.business.city}, {props.business.state} {props.business.zipCode}\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n                <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={handleRate}>\n                  Rate\n                </Button>\n                {!favorite ? <IconButton onClick={onFavoriteClick}>\n                  <StarBorderIcon style={{ color: '#fdd835' }} />\n                </IconButton>\n                : <IconButton onClick={onFavoriteClick}>\n                <StarIcon style={{ color: '#fdd835' }} />\n                </IconButton>}\n            </CardActions>\n          </Card>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"business name\"\n            fullWidth={fullWidth}\n            className='custom-modal-style'\n          >\n            <DialogTitle id=\"simple-dialog-title\">\n            <Box display=\"flex\" alignItems=\"center\">\n                <Box flexGrow={1} >{props.business.name}</Box>\n                <Box>\n                  <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={handleRate}>\n                    Rate\n                  </Button>\n                  {!favorite ? <IconButton onClick={onFavoriteClick}>\n                    <StarBorderIcon style={{ color: '#fdd835' }} />\n                  </IconButton>\n                  : <IconButton onClick={onFavoriteClick}>\n                  <StarIcon style={{ color: '#fdd835' }} />\n                  </IconButton>}\n                  <IconButton onClick={handleClose}>\n                    <CloseIcon />\n                  </IconButton>\n                </Box>\n            </Box>\n            </DialogTitle>\n            <DialogContent>\n              <div className={classes.root}>\n                <Grid container spacing={3}>\n                 <Grid item xs={12}>\n                  <Typography gutterBottom variant=\"body2\" component=\"p\" className={classes.text}>\n                    {props.business.address}, {props.business.city}, {props.business.state} {props.business.zipCode}\n                  </Typography>\n                 </Grid>\n                 <Grid item xs={6}>\n                  <DialogContentText>\n                    Average rating: {props.business.rating}/5\n                  </DialogContentText>\n                  <DialogContentText>\n                    Genre: {props.business.category}\n                  </DialogContentText>\n                 </Grid>\n                 <Grid item xs={6} justify-content='center'><img src={props.business.imageSrc} height='200px'/></Grid>\n                 <Grid item xs={12}>\n                 <Map\n                  id=\"myMap\"\n                  options={{\n                    center: { lat: parseFloat(props.business.latitude), lng: parseFloat(props.business.longitude) },\n                    zoom: 14\n                  }}\n                  onMapLoad={map => {\n                    var lat = parseFloat(props.business.latitude);\n                    var long = parseFloat(props.business.longitude);\n                    var marker = new window.google.maps.Marker({\n                      position: { lat: lat, lng: long },\n                      map: map,\n                      title: 'Restaurant here',\n                      setContent: 'Restaurant here'\n                    });\n                  }}\n                />\n\n                 </Grid>\n                </Grid>\n              </div>\n            </DialogContent>\n          </Dialog>\n          <Dialog\n            open={openRate}\n            onClose={handleClose}\n            aria-labelledby=\"business name\"\n            fullWidth={fullWidth}\n            className='custom-modal-style'\n          >\n            <DialogTitle id=\"simple-dialog-title\">\n            <Box display=\"flex\" alignItems=\"center\">\n                <Box flexGrow={1} >{props.business.name}</Box>\n                <Box>\n                  <IconButton onClick={handleClose}>\n                    <CloseIcon />\n                  </IconButton>\n                </Box>\n            </Box>\n            </DialogTitle>\n            <DialogContent>\n              <div className={classes.root}>\n                <Grid container spacing={3}>\n                 <Grid item xs={12}>\n                  <Typography gutterBottom variant=\"body2\" component=\"p\" className={classes.text}>\n                    {props.business.address}, {props.business.city}, {props.business.state} {props.business.zipCode}\n                  </Typography>\n                 </Grid>\n                 <Grid item xs={6}>\n                  <DialogContent>\n                    <Form onSubmit={onSubmitClick}>\n                      <Form.Group controlId=\"rate\">\n                        <Form.Label>Rate</Form.Label>\n                        {['radio'].map((type) =>(\n                          <div key={`inline-${type}`} className=\"mb-3\">\n                            <Form.Check inline value=\"1\" label=\"1\" type={type} name=\"radio\" id={`inline-${type}-1`} onChange={handleRateChange} />\n                            <Form.Check inline value=\"2\" label=\"2\" type={type} name=\"radio\" id={`inline-${type}-2`} onChange={handleRateChange} />\n                            <Form.Check inline value=\"3\" label=\"3\" type={type} name=\"radio\" id={`inline-${type}-3`} onChange={handleRateChange} />\n                            <Form.Check inline value=\"4\" label=\"4\" type={type} name=\"radio\" id={`inline-${type}-4`} onChange={handleRateChange} />\n                            <Form.Check inline value=\"5\" label=\"5\" type={type} name=\"radio\" id={`inline-${type}-5`} onChange={handleRateChange} />\n                          </div>\n                        ))}\n                      </Form.Group>\n                      <Form.Group controlId=\"review\">\n                        <Form.Label>Review</Form.Label>\n                        <Form.Control autoFocus type=\"text\" placeholder=\"Review (100 characters)\" value={review} onChange={handleReviewChange} />\n                      </Form.Group>\n                      <Button type=\"submit\" disabled={!validate()}>\n                        Submit\n                      </Button>\n                    </Form>\n                  </DialogContent>\n                 </Grid>\n                 <Grid item xs={6} justify-content='center'><img src={props.business.imageSrc} height='200px'/></Grid>\n                </Grid>\n              </div>\n            </DialogContent>\n          </Dialog>\n        </div>\n      );\n  }\n      \n\n    // return (\n    //     <div className='Business'>\n    //       <Card height='100px'>\n    //         <CardActionArea onClick={(e) => handleOpen(e)}>\n    //           <CardMedia\n    //             component='img'\n    //             height='140'\n    //             src={props.business.imageSrc}\n    //           />\n    //           <CardContent>\n    //             <Typography gutterBottom variant=\"h2\" component=\"h2\">\n    //               {props.business.name}\n    //             </Typography>\n    //             <Typography gutterBottom variant=\"body2\" component=\"p\">\n    //               {props.business.address}\n    //             </Typography>\n    //             <Typography gutterBottom variant=\"body2\" component=\"p\">\n    //               {props.business.city}, {props.business.state} {props.business.zipCode}\n    //             </Typography>\n    //           </CardContent>\n    //         </CardActionArea>\n    //           {logged ?\n    //           <div>\n    //             <CardActions>\n    //             <Button size=\"small\" color=\"secondary\" onClick={handleRate}>\n    //               Rate\n    //             </Button>\n    //             {!favorite ? <Button size=\"small\" color='primary' onClick={handleFavorite}>\n    //               Add Favorite\n    //             </Button>\n    //             : <Button size=\"small\" color='primary' variant='outlined' onClick={handleFavorite}\n    //             >Favorite\n    //             </Button>}\n    //             </CardActions>\n    //           </div>\n    //           : <div></div>}\n    //       </Card>\n    //       <Dialog\n    //         open={open}\n    //         onClose={handleClose}\n    //         aria-labelledby=\"business name\"\n    //         fullWidth={fullWidth}\n    //         className='custom-modal-style'\n    //       >\n    //         <DialogTitle id=\"simple-dialog-title\">\n    //         <Box display=\"flex\" alignItems=\"center\">\n    //             <Box flexGrow={1} >{props.business.name}</Box>\n    //             <Box>\n    //             {logged ? <div>\n    //               <Button size=\"small\" color=\"primary\" onClick={handleRate}>\n    //                 Rate\n    //               </Button>\n    //               <IconButton>\n    //                 <StarOutlineIcon />\n    //               </IconButton>\n    //               <IconButton onClick={handleClose}>\n    //                 <CloseIcon />\n    //               </IconButton>\n    //               </div> : \n    //               <IconButton onClick={handleClose}>\n    //                 <CloseIcon />\n    //               </IconButton>\n    //             }\n    //             </Box>\n    //         </Box>\n    //         </DialogTitle>\n    //         <DialogContent>\n    //           <div className={classes.root}>\n    //             <Grid container spacing={3}>\n    //              <Grid item xs={12}>\n    //               <Typography gutterBottom variant=\"body2\" component=\"p\" className={classes.text}>\n    //                 {props.business.address}, {props.business.city}, {props.business.state} {props.business.zipCode}\n    //               </Typography>\n    //              </Grid>\n    //              <Grid item xs={6}>\n    //               <DialogContentText>\n    //                 Average rating: {props.business.rating}/5\n    //               </DialogContentText>\n    //               <DialogContentText>\n    //                 Genre: {props.business.category}\n    //               </DialogContentText>\n    //              </Grid>\n    //              <Grid item xs={6} justify-content='center'><img src={props.business.imageSrc} height='200px'/></Grid>\n    //              <Grid item xs={12}>(Google Maps API goes here)</Grid>\n    //             </Grid>\n    //           </div>\n    //         </DialogContent>\n    //       </Dialog>\n    //       <Dialog\n    //         open={openRate}\n    //         onClose={handleClose}\n    //         aria-labelledby=\"business name\"\n    //         fullWidth={fullWidth}\n    //         className='custom-modal-style'\n    //       >\n    //         <DialogTitle id=\"simple-dialog-title\">\n    //         <Box display=\"flex\" alignItems=\"center\">\n    //             <Box flexGrow={1} >{props.business.name}</Box>\n    //             <Box>\n    //               <IconButton onClick={handleClose}>\n    //                 <CloseIcon />\n    //               </IconButton>\n    //             </Box>\n    //         </Box>\n    //         </DialogTitle>\n    //         <DialogContent>\n    //           <div className={classes.root}>\n    //             <Grid container spacing={3}>\n    //              <Grid item xs={12}>\n    //               <Typography gutterBottom variant=\"body2\" component=\"p\" className={classes.text}>\n    //                 {props.business.address}, {props.business.city}, {props.business.state} {props.business.zipCode}\n    //               </Typography>\n    //              </Grid>\n    //              <Grid item xs={6}>\n    //               <DialogContent>\n    //                 <Form onSubmit={onSubmitClick}>\n    //                   <Form.Group controlId=\"rate\">\n    //                     <Form.Label>Rate</Form.Label>\n    //                     {['radio'].map((type) =>(\n    //                       <div key={`inline-${type}`} className=\"mb-3\">\n    //                         <Form.Check inline value=\"1\" label=\"1\" type={type} name=\"radio\" id={`inline-${type}-1`} onChange={handleRateChange} />\n    //                         <Form.Check inline value=\"2\" label=\"2\" type={type} name=\"radio\" id={`inline-${type}-2`} onChange={handleRateChange} />\n    //                         <Form.Check inline value=\"3\" label=\"3\" type={type} name=\"radio\" id={`inline-${type}-3`} onChange={handleRateChange} />\n    //                         <Form.Check inline value=\"4\" label=\"4\" type={type} name=\"radio\" id={`inline-${type}-4`} onChange={handleRateChange} />\n    //                         <Form.Check inline value=\"5\" label=\"5\" type={type} name=\"radio\" id={`inline-${type}-5`} onChange={handleRateChange} />\n    //                       </div>\n    //                     ))}\n    //                   </Form.Group>\n    //                   <Form.Group controlId=\"review\">\n    //                     <Form.Label>Review</Form.Label>\n    //                     <Form.Control autoFocus type=\"text\" placeholder=\"Review (100 characters)\" value={review} onChange={handleReviewChange} />\n    //                   </Form.Group>\n    //                   <Button type=\"submit\" disabled={!validate()}>\n    //                     Submit\n    //                   </Button>\n    //                 </Form>\n    //               </DialogContent>\n    //              </Grid>\n    //              <Grid item xs={6} justify-content='center'><img src={props.business.imageSrc} height='200px'/></Grid>\n    //             </Grid>\n    //           </div>\n    //         </DialogContent>\n    //       </Dialog>\n    //     </div>\n        // <div className=\"Business\">\n        //   <div className=\"image-container\">\n        //     <img src={props.business.imageSrc} alt=''/>\n        //   </div>\n        //   <h2>{props.business.name}</h2>\n        //   <div className=\"Business-information\">\n        //     <div className=\"Business-address\">\n        //       <p>{props.business.address}</p>\n        //       <p>{props.business.city}</p>\n        //       <p>{props.business.state} {props.business.zipCode}</p>\n        //     </div>\n        //     <div className=\"Business-reviews\">\n        //       <h3>{props.business.category.toUpperCase()}</h3>\n        //       <h3 className=\"rating\">{props.business.rating} stars</h3>\n        //       <p>{props.business.reviewCount} reviews</p>\n        //     </div>\n        //   </div>\n        // </div>\n        // );\n","/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/ResizableTextarea/ResizableTextarea.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Bubble/Bubble.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Restaurant/Restaurant.js",[],"/Users/akomand/Classes/Capstone/FooDecisive/frontend/src/components/Profile/ReviewDetail.js",["237","238","239","240","241","242","243"],{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","severity":1,"message":"249","line":2,"column":49,"nodeType":"250","messageId":"251","endLine":2,"endColumn":56},{"ruleId":"248","severity":1,"message":"252","line":2,"column":58,"nodeType":"250","messageId":"251","endLine":2,"endColumn":62},{"ruleId":"248","severity":1,"message":"253","line":9,"column":10,"nodeType":"250","messageId":"251","endLine":9,"endColumn":29},{"ruleId":"248","severity":1,"message":"254","line":1,"column":27,"nodeType":"250","messageId":"251","endLine":1,"endColumn":36},{"ruleId":"248","severity":1,"message":"255","line":44,"column":11,"nodeType":"250","messageId":"251","endLine":44,"endColumn":18},{"ruleId":"248","severity":1,"message":"256","line":13,"column":7,"nodeType":"250","messageId":"251","endLine":13,"endColumn":16},{"ruleId":"257","severity":1,"message":"258","line":62,"column":23,"nodeType":"259","messageId":"260","endLine":62,"endColumn":25},{"ruleId":"248","severity":1,"message":"254","line":1,"column":27,"nodeType":"250","messageId":"251","endLine":1,"endColumn":36},{"ruleId":"248","severity":1,"message":"261","line":11,"column":22,"nodeType":"250","messageId":"251","endLine":11,"endColumn":29},{"ruleId":"248","severity":1,"message":"262","line":34,"column":10,"nodeType":"250","messageId":"251","endLine":34,"endColumn":18},{"ruleId":"248","severity":1,"message":"263","line":6,"column":22,"nodeType":"250","messageId":"251","endLine":6,"endColumn":25},{"ruleId":"248","severity":1,"message":"264","line":6,"column":27,"nodeType":"250","messageId":"251","endLine":6,"endColumn":33},{"ruleId":"248","severity":1,"message":"265","line":18,"column":12,"nodeType":"250","messageId":"251","endLine":18,"endColumn":23},{"ruleId":"248","severity":1,"message":"266","line":20,"column":11,"nodeType":"250","messageId":"251","endLine":20,"endColumn":20},{"ruleId":"248","severity":1,"message":"267","line":22,"column":11,"nodeType":"250","messageId":"251","endLine":22,"endColumn":22},{"ruleId":"248","severity":1,"message":"268","line":26,"column":11,"nodeType":"250","messageId":"251","endLine":26,"endColumn":28},{"ruleId":"248","severity":1,"message":"269","line":30,"column":14,"nodeType":"250","messageId":"251","endLine":30,"endColumn":29},{"ruleId":"257","severity":1,"message":"258","line":120,"column":41,"nodeType":"259","messageId":"260","endLine":120,"endColumn":43},{"ruleId":"248","severity":1,"message":"270","line":39,"column":12,"nodeType":"250","messageId":"251","endLine":39,"endColumn":26},{"ruleId":"248","severity":1,"message":"271","line":39,"column":28,"nodeType":"250","messageId":"251","endLine":39,"endColumn":38},{"ruleId":"248","severity":1,"message":"272","line":21,"column":7,"nodeType":"250","messageId":"251","endLine":21,"endColumn":13},{"ruleId":"248","severity":1,"message":"273","line":47,"column":10,"nodeType":"250","messageId":"251","endLine":47,"endColumn":13},{"ruleId":"248","severity":1,"message":"274","line":47,"column":15,"nodeType":"250","messageId":"251","endLine":47,"endColumn":21},{"ruleId":"248","severity":1,"message":"275","line":48,"column":10,"nodeType":"250","messageId":"251","endLine":48,"endColumn":13},{"ruleId":"248","severity":1,"message":"276","line":48,"column":15,"nodeType":"250","messageId":"251","endLine":48,"endColumn":21},{"ruleId":"257","severity":1,"message":"277","line":32,"column":21,"nodeType":"259","messageId":"260","endLine":32,"endColumn":23},{"ruleId":"257","severity":1,"message":"258","line":34,"column":117,"nodeType":"259","messageId":"260","endLine":34,"endColumn":119},{"ruleId":"257","severity":1,"message":"277","line":65,"column":26,"nodeType":"259","messageId":"260","endLine":65,"endColumn":28},{"ruleId":"257","severity":1,"message":"277","line":75,"column":26,"nodeType":"259","messageId":"260","endLine":75,"endColumn":28},{"ruleId":"257","severity":1,"message":"277","line":85,"column":26,"nodeType":"259","messageId":"260","endLine":85,"endColumn":28},{"ruleId":"257","severity":1,"message":"277","line":95,"column":26,"nodeType":"259","messageId":"260","endLine":95,"endColumn":28},{"ruleId":"248","severity":1,"message":"278","line":2,"column":10,"nodeType":"250","messageId":"251","endLine":2,"endColumn":16},{"ruleId":"248","severity":1,"message":"272","line":7,"column":7,"nodeType":"250","messageId":"251","endLine":7,"endColumn":13},{"ruleId":"248","severity":1,"message":"279","line":22,"column":8,"nodeType":"250","messageId":"251","endLine":22,"endColumn":15},{"ruleId":"248","severity":1,"message":"280","line":37,"column":12,"nodeType":"250","messageId":"251","endLine":37,"endColumn":22},{"ruleId":"248","severity":1,"message":"262","line":46,"column":12,"nodeType":"250","messageId":"251","endLine":46,"endColumn":20},{"ruleId":"248","severity":1,"message":"281","line":48,"column":12,"nodeType":"250","messageId":"251","endLine":48,"endColumn":24},{"ruleId":"248","severity":1,"message":"282","line":48,"column":26,"nodeType":"250","messageId":"251","endLine":48,"endColumn":41},{"ruleId":"248","severity":1,"message":"283","line":50,"column":12,"nodeType":"250","messageId":"251","endLine":50,"endColumn":20},{"ruleId":"248","severity":1,"message":"284","line":50,"column":22,"nodeType":"250","messageId":"251","endLine":50,"endColumn":33},{"ruleId":"248","severity":1,"message":"285","line":74,"column":11,"nodeType":"250","messageId":"251","endLine":74,"endColumn":27},{"ruleId":"286","severity":1,"message":"287","line":171,"column":10,"nodeType":"288","endLine":171,"endColumn":12,"suggestions":"289"},{"ruleId":"290","severity":1,"message":"291","line":263,"column":61,"nodeType":"292","endLine":263,"endColumn":112},{"ruleId":"248","severity":1,"message":"293","line":274,"column":25,"nodeType":"250","messageId":"251","endLine":274,"endColumn":31},{"ruleId":"290","severity":1,"message":"291","line":347,"column":61,"nodeType":"292","endLine":347,"endColumn":112},{"ruleId":"248","severity":1,"message":"279","line":21,"column":8,"nodeType":"250","messageId":"251","endLine":21,"endColumn":15},{"ruleId":"248","severity":1,"message":"280","line":35,"column":12,"nodeType":"250","messageId":"251","endLine":35,"endColumn":22},{"ruleId":"248","severity":1,"message":"294","line":43,"column":12,"nodeType":"250","messageId":"251","endLine":43,"endColumn":18},{"ruleId":"248","severity":1,"message":"262","line":44,"column":12,"nodeType":"250","messageId":"251","endLine":44,"endColumn":20},{"ruleId":"248","severity":1,"message":"281","line":46,"column":12,"nodeType":"250","messageId":"251","endLine":46,"endColumn":24},{"ruleId":"248","severity":1,"message":"282","line":46,"column":26,"nodeType":"250","messageId":"251","endLine":46,"endColumn":41},{"ruleId":"248","severity":1,"message":"283","line":48,"column":12,"nodeType":"250","messageId":"251","endLine":48,"endColumn":20},{"ruleId":"248","severity":1,"message":"284","line":48,"column":22,"nodeType":"250","messageId":"251","endLine":48,"endColumn":33},{"ruleId":"286","severity":1,"message":"287","line":168,"column":10,"nodeType":"288","endLine":168,"endColumn":12,"suggestions":"295"},{"ruleId":"290","severity":1,"message":"291","line":249,"column":61,"nodeType":"292","endLine":249,"endColumn":112},{"ruleId":"248","severity":1,"message":"293","line":260,"column":25,"nodeType":"250","messageId":"251","endLine":260,"endColumn":31},{"ruleId":"290","severity":1,"message":"291","line":324,"column":61,"nodeType":"292","endLine":324,"endColumn":112},{"ruleId":"248","severity":1,"message":"254","line":1,"column":27,"nodeType":"250","messageId":"251","endLine":1,"endColumn":36},{"ruleId":"248","severity":1,"message":"296","line":11,"column":7,"nodeType":"250","messageId":"251","endLine":11,"endColumn":14},{"ruleId":"248","severity":1,"message":"255","line":27,"column":9,"nodeType":"250","messageId":"251","endLine":27,"endColumn":16},{"ruleId":"257","severity":1,"message":"258","line":63,"column":23,"nodeType":"259","messageId":"260","endLine":63,"endColumn":25},{"ruleId":"248","severity":1,"message":"297","line":18,"column":8,"nodeType":"250","messageId":"251","endLine":18,"endColumn":20},{"ruleId":"248","severity":1,"message":"298","line":22,"column":8,"nodeType":"250","messageId":"251","endLine":22,"endColumn":12},{"ruleId":"248","severity":1,"message":"299","line":63,"column":9,"nodeType":"250","messageId":"251","endLine":63,"endColumn":23},{"ruleId":"248","severity":1,"message":"300","line":71,"column":9,"nodeType":"250","messageId":"251","endLine":71,"endColumn":17},{"ruleId":"257","severity":1,"message":"277","line":191,"column":35,"nodeType":"259","messageId":"260","endLine":191,"endColumn":37},{"ruleId":"286","severity":1,"message":"301","line":202,"column":6,"nodeType":"288","endLine":202,"endColumn":19,"suggestions":"302"},{"ruleId":"248","severity":1,"message":"279","line":21,"column":8,"nodeType":"250","messageId":"251","endLine":21,"endColumn":15},{"ruleId":"248","severity":1,"message":"280","line":35,"column":12,"nodeType":"250","messageId":"251","endLine":35,"endColumn":22},{"ruleId":"248","severity":1,"message":"294","line":43,"column":12,"nodeType":"250","messageId":"251","endLine":43,"endColumn":18},{"ruleId":"248","severity":1,"message":"262","line":44,"column":12,"nodeType":"250","messageId":"251","endLine":44,"endColumn":20},{"ruleId":"248","severity":1,"message":"281","line":46,"column":12,"nodeType":"250","messageId":"251","endLine":46,"endColumn":24},{"ruleId":"248","severity":1,"message":"282","line":46,"column":26,"nodeType":"250","messageId":"251","endLine":46,"endColumn":41},{"ruleId":"248","severity":1,"message":"283","line":48,"column":12,"nodeType":"250","messageId":"251","endLine":48,"endColumn":20},{"ruleId":"248","severity":1,"message":"284","line":48,"column":22,"nodeType":"250","messageId":"251","endLine":48,"endColumn":33},{"ruleId":"286","severity":1,"message":"287","line":168,"column":10,"nodeType":"288","endLine":168,"endColumn":12,"suggestions":"303"},{"ruleId":"290","severity":1,"message":"291","line":246,"column":61,"nodeType":"292","endLine":246,"endColumn":112},{"ruleId":"248","severity":1,"message":"293","line":257,"column":25,"nodeType":"250","messageId":"251","endLine":257,"endColumn":31},{"ruleId":"290","severity":1,"message":"291","line":321,"column":61,"nodeType":"292","endLine":321,"endColumn":112},{"ruleId":"248","severity":1,"message":"254","line":1,"column":26,"nodeType":"250","messageId":"251","endLine":1,"endColumn":35},{"ruleId":"248","severity":1,"message":"304","line":11,"column":20,"nodeType":"250","messageId":"251","endLine":11,"endColumn":27},{"ruleId":"305","severity":1,"message":"306","line":82,"column":9,"nodeType":"307","messageId":"308","endLine":118,"endColumn":10},{"ruleId":"305","severity":1,"message":"306","line":122,"column":9,"nodeType":"307","messageId":"308","endLine":138,"endColumn":10},{"ruleId":"257","severity":1,"message":"277","line":142,"column":97,"nodeType":"259","messageId":"260","endLine":142,"endColumn":99},{"ruleId":"257","severity":1,"message":"277","line":142,"column":126,"nodeType":"259","messageId":"260","endLine":142,"endColumn":128},{"ruleId":"290","severity":1,"message":"291","line":251,"column":64,"nodeType":"292","endLine":251,"endColumn":113},"no-native-reassign",["309"],"no-negated-in-lhs",["310"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'RestaurantContainer' is defined but never used.","'useEffect' is defined but never used.","'classes' is assigned a value but never used.","'useStyles' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'NavItem' is defined but never used.","'username' is assigned a value but never used.","'Box' is defined but never used.","'Button' is defined but never used.","'openConfirm' is assigned a value but never used.","'fullWidth' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleOpenConfirm' is assigned a value but never used.","'handleDeleteRev' is defined but never used.","'currentMessage' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'google' is assigned a value but never used.","'lat' is assigned a value but never used.","'setLat' is assigned a value but never used.","'lng' is assigned a value but never used.","'setLng' is assigned a value but never used.","Expected '===' and instead saw '=='.","'render' is defined but never used.","'AddIcon' is defined but never used.","'businessID' is assigned a value but never used.","'initfavorite' is assigned a value but never used.","'setInitFavorite' is assigned a value but never used.","'selected' is assigned a value but never used.","'setSelected' is assigned a value but never used.","'handleRateChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.business.id'. Either include it or remove the dependency array.","ArrayExpression",["311"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'marker' is assigned a value but never used.","'logged' is assigned a value but never used.",["312"],"'API_KEY' is assigned a value but never used.","'GridListTile' is defined but never used.","'logo' is defined but never used.","'requestOptions' is assigned a value but never used.","'endpoint' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'bubbles'. Either include it or remove the dependency array.",["313"],["314"],"'useAuth' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"315","fix":"316"},{"desc":"315","fix":"317"},{"desc":"318","fix":"319"},{"desc":"315","fix":"320"},"Update the dependencies array to be: [props.business.id]",{"range":"321","text":"322"},{"range":"323","text":"322"},"Update the dependencies array to be: [botResponse, bubbles]",{"range":"324","text":"325"},{"range":"326","text":"322"},[4806,4808],"[props.business.id]",[4721,4723],[5722,5735],"[botResponse, bubbles]",[4711,4713]]